Version 3.2 HI-TECH Software Intermediate Code
[v F30 `(v ~T0 @X0 0 tf1`uc ]
[v F33 `(v ~T0 @X0 0 tf1`ul ]
"26 lcd.h
[s S1 `*F30 1 `*F30 1 `*F30 1 `*F33 1 ]
[n S1 . ctrlEnable ctrlRS ctrlData ctrlWait ]
[v F43 `*S1 ~T0 @X0 1 t ]
[v F174 `*CS1 ~T0 @X0 1 t ]
"8 lcd.c
[v _lcdConfig `(v ~T0 @X0 0 sf1`C*CS1 ]
[v F50 `*CS1 ~T0 @X0 1 t ]
"37 lcd.h
[v _lcdSetPosition `(v ~T0 @X0 0 ef2`C*CS1`uc ]
[v F167 `*CS1 ~T0 @X0 1 t ]
[v F62 `*CS1 ~T0 @X0 1 t ]
[v F170 `*CS1 ~T0 @X0 1 t ]
"7 lcd.c
[v _lcdWriteData `(v ~T0 @X0 0 sf2`C*CS1`uc ]
[v F71 `*CS1 ~T0 @X0 1 t ]
[v F76 `*CS1 ~T0 @X0 1 t ]
[v F54 `*CS1 ~T0 @X0 1 t ]
"56 C:\Program Files\Microchip\xc8\v2.35\pic\include\c90\string.h
[v _strlen `(ui ~T0 @X0 0 ef1`*Cuc ]
"14
[v _memcpy `(*v ~T0 @X0 0 ef3`*v`*Cv`ui ]
[v F58 `*CS1 ~T0 @X0 1 t ]
[; ;stdint.h: 13: typedef signed char int8_t;
[; ;stdint.h: 20: typedef signed int int16_t;
[; ;stdint.h: 28: typedef __int24 int24_t;
[; ;stdint.h: 36: typedef signed long int int32_t;
[; ;stdint.h: 52: typedef unsigned char uint8_t;
[; ;stdint.h: 58: typedef unsigned int uint16_t;
[; ;stdint.h: 65: typedef __uint24 uint24_t;
[; ;stdint.h: 72: typedef unsigned long int uint32_t;
[; ;stdint.h: 88: typedef signed char int_least8_t;
[; ;stdint.h: 96: typedef signed int int_least16_t;
[; ;stdint.h: 109: typedef __int24 int_least24_t;
[; ;stdint.h: 118: typedef signed long int int_least32_t;
[; ;stdint.h: 136: typedef unsigned char uint_least8_t;
[; ;stdint.h: 143: typedef unsigned int uint_least16_t;
[; ;stdint.h: 154: typedef __uint24 uint_least24_t;
[; ;stdint.h: 162: typedef unsigned long int uint_least32_t;
[; ;stdint.h: 181: typedef signed char int_fast8_t;
[; ;stdint.h: 188: typedef signed int int_fast16_t;
[; ;stdint.h: 200: typedef __int24 int_fast24_t;
[; ;stdint.h: 208: typedef signed long int int_fast32_t;
[; ;stdint.h: 224: typedef unsigned char uint_fast8_t;
[; ;stdint.h: 230: typedef unsigned int uint_fast16_t;
[; ;stdint.h: 240: typedef __uint24 uint_fast24_t;
[; ;stdint.h: 247: typedef unsigned long int uint_fast32_t;
[; ;stdint.h: 268: typedef int32_t intmax_t;
[; ;stdint.h: 282: typedef uint32_t uintmax_t;
[; ;stdint.h: 289: typedef int16_t intptr_t;
[; ;stdint.h: 294: typedef uint16_t uintptr_t;
[; ;lcd.h: 23: typedef void (*pFcnGpio)(uint8_t);
[; ;lcd.h: 24: typedef void (*pFcnWait)(uint32_t);
[; ;lcd.h: 26: typedef struct {
[; ;lcd.h: 27: pFcnGpio ctrlEnable;
[; ;lcd.h: 28: pFcnGpio ctrlRS ;
[; ;lcd.h: 29: pFcnGpio ctrlData ;
[; ;lcd.h: 30: pFcnWait ctrlWait ;
[; ;lcd.h: 31: }lcdData_t;
[; ;lcd.h: 35: void lcdInit(lcdData_t * const obj, pFcnGpio E, pFcnGpio RS,
[; ;lcd.h: 36: pFcnGpio data, pFcnWait wait);
[; ;lcd.h: 37: void lcdSetPosition(lcdData_t const * const obj, unsigned char position);
[; ;lcd.h: 38: void lcdPuts (lcdData_t const * const obj, const char *s);
[; ;lcd.h: 39: void lcdPutch (lcdData_t const * const obj, unsigned char c);
[; ;lcd.h: 40: void lcdWriteRegister(lcdData_t const * const obj, uint8_t regAddr);
[; ;lcd.h: 41: void lcdPutsPos(lcdData_t const * const obj, const char *s, uint8_t initPos);
[; ;lcd.h: 42: void lcdPutsInLine1(lcdData_t const * const obj, const char *s, uint8_t initPos);
[; ;lcd.h: 43: void lcdPutsInLine2(lcdData_t const * const obj, const char *s, uint8_t initPos);
[; ;stdbool.h: 15: typedef unsigned char bool;
[; ;xc8\pic\include\__size_t.h: 4: typedef unsigned size_t;
[; ;string.h: 14: extern void * memcpy(void *, const void *, size_t);
[; ;string.h: 15: extern void * memmove(void *, const void *, size_t);
[; ;string.h: 16: extern void * memset(void *, int, size_t);
[; ;string.h: 36: extern char * strcat(char *, const char *);
[; ;string.h: 37: extern char * strcpy(char *, const char *);
[; ;string.h: 38: extern char * strncat(char *, const char *, size_t);
[; ;string.h: 39: extern char * strncpy(char *, const char *, size_t);
[; ;string.h: 40: extern char * strdup(const char *);
[; ;string.h: 41: extern char * strtok(char *, const char *);
[; ;string.h: 44: extern int memcmp(const void *, const void *, size_t);
[; ;string.h: 45: extern int strcmp(const char *, const char *);
[; ;string.h: 46: extern int stricmp(const char *, const char *);
[; ;string.h: 47: extern int strncmp(const char *, const char *, size_t);
[; ;string.h: 48: extern int strnicmp(const char *, const char *, size_t);
[; ;string.h: 49: extern void * memchr(const void *, int, size_t);
[; ;string.h: 50: extern size_t strcspn(const char *, const char *);
[; ;string.h: 51: extern char * strpbrk(const char *, const char *);
[; ;string.h: 52: extern size_t strspn(const char *, const char *);
[; ;string.h: 53: extern char * strstr(const char *, const char *);
[; ;string.h: 54: extern char * stristr(const char *, const char *);
[; ;string.h: 55: extern char * strerror(int);
[; ;string.h: 56: extern size_t strlen(const char *);
[; ;string.h: 57: extern char * strchr(const char *, int);
[; ;string.h: 58: extern char * strichr(const char *, int);
[; ;string.h: 59: extern char * strrchr(const char *, int);
[; ;string.h: 60: extern char * strrichr(const char *, int);
[; ;lcd.c: 6: static void lcdSet(lcdData_t const * const obj);
[; ;lcd.c: 7: static void lcdWriteData( lcdData_t const * const obj, unsigned char c);
[; ;lcd.c: 8: static void lcdConfig(lcdData_t const * const obj);
"11 lcd.c
[v _lcdInit `(v ~T0 @X0 1 ef5`C*S1`*F30`*F30`*F30`*F33 ]
"12
{
[; ;lcd.c: 11: void lcdInit(lcdData_t * const obj, pFcnGpio E, pFcnGpio RS,
[; ;lcd.c: 12: pFcnGpio data, pFcnWait wait){
[e :U _lcdInit ]
[v F176 `*S1 ~T0 @X0 1 t ]
"11
[v _obj `C*S1 ~T0 @X0 1 r1 ]
[v _E `*F30 ~T0 @X0 1 r2 ]
[v _RS `*F30 ~T0 @X0 1 r3 ]
"12
[v _data `*F30 ~T0 @X0 1 r4 ]
[v _wait `*F33 ~T0 @X0 1 r5 ]
[f ]
[; ;lcd.c: 13: obj->ctrlEnable = E;
"13
[e = . *U _obj 0 _E ]
[; ;lcd.c: 14: obj->ctrlRS = RS;
"14
[e = . *U _obj 1 _RS ]
[; ;lcd.c: 15: obj->ctrlData = data;
"15
[e = . *U _obj 2 _data ]
[; ;lcd.c: 16: obj->ctrlWait = wait;
"16
[e = . *U _obj 3 _wait ]
[; ;lcd.c: 18: lcdConfig(obj);
"18
[e ( _lcdConfig (1 -> _obj `C*CS1 ]
[; ;lcd.c: 19: lcdSetPosition(obj, 0);
"19
[e ( _lcdSetPosition (2 , -> _obj `C*CS1 -> -> 0 `i `uc ]
[; ;lcd.c: 20: }
"20
[e :UE 2 ]
}
"22
[v _lcdSet `(v ~T0 @X0 1 sf1`C*CS1 ]
{
[; ;lcd.c: 22: static void lcdSet(lcdData_t const * const obj){
[e :U _lcdSet ]
[v F182 `*CS1 ~T0 @X0 1 t ]
[v _obj `C*CS1 ~T0 @X0 1 r1 ]
[f ]
[; ;lcd.c: 23: obj->ctrlRS(0);
"23
[e ( *U . *U _obj 1 (1 -> -> 0 `i `uc ]
[; ;lcd.c: 24: obj->ctrlEnable(1);
"24
[e ( *U . *U _obj 0 (1 -> -> 1 `i `uc ]
[; ;lcd.c: 25: obj->ctrlWait((2));
"25
[e ( *U . *U _obj 3 (1 -> -> -> 2 `i `l `ul ]
[; ;lcd.c: 26: obj->ctrlEnable(0);
"26
[e ( *U . *U _obj 0 (1 -> -> 0 `i `uc ]
[; ;lcd.c: 27: }
"27
[e :UE 3 ]
}
"30
[v _lcdConfig `(v ~T0 @X0 1 sf1`C*CS1 ]
{
[; ;lcd.c: 30: static void lcdConfig(lcdData_t const * const obj){
[e :U _lcdConfig ]
[v F188 `*CS1 ~T0 @X0 1 t ]
[v _obj `C*CS1 ~T0 @X0 1 r1 ]
[f ]
[; ;lcd.c: 31: obj->ctrlData((1));
"31
[e ( *U . *U _obj 2 (1 -> -> 1 `i `uc ]
[; ;lcd.c: 32: lcdSet(obj);
"32
[e ( _lcdSet (1 _obj ]
[; ;lcd.c: 33: obj->ctrlData((2));
"33
[e ( *U . *U _obj 2 (1 -> -> 2 `i `uc ]
[; ;lcd.c: 34: lcdSet(obj);
"34
[e ( _lcdSet (1 _obj ]
[; ;lcd.c: 35: obj->ctrlData((56));
"35
[e ( *U . *U _obj 2 (1 -> -> 56 `i `uc ]
[; ;lcd.c: 36: lcdSet(obj);
"36
[e ( _lcdSet (1 _obj ]
[; ;lcd.c: 37: obj->ctrlData((12));
"37
[e ( *U . *U _obj 2 (1 -> -> 12 `i `uc ]
[; ;lcd.c: 38: lcdSet(obj);
"38
[e ( _lcdSet (1 _obj ]
[; ;lcd.c: 39: obj->ctrlData((6));
"39
[e ( *U . *U _obj 2 (1 -> -> 6 `i `uc ]
[; ;lcd.c: 40: lcdSet(obj);
"40
[e ( _lcdSet (1 _obj ]
[; ;lcd.c: 42: }
"42
[e :UE 4 ]
}
"44
[v _lcdWriteRegister `(v ~T0 @X0 1 ef2`C*CS1`uc ]
{
[; ;lcd.c: 44: void lcdWriteRegister(lcdData_t const * const obj, uint8_t regAddr){
[e :U _lcdWriteRegister ]
[v F195 `*CS1 ~T0 @X0 1 t ]
[v _obj `C*CS1 ~T0 @X0 1 r1 ]
[v _regAddr `uc ~T0 @X0 1 r2 ]
[f ]
[; ;lcd.c: 45: obj->ctrlData(regAddr);
"45
[e ( *U . *U _obj 2 (1 _regAddr ]
[; ;lcd.c: 46: lcdSet(obj);
"46
[e ( _lcdSet (1 _obj ]
[; ;lcd.c: 47: }
"47
[e :UE 5 ]
}
"48
[v _lcdSetPosition `(v ~T0 @X0 1 ef2`C*CS1`uc ]
{
[; ;lcd.c: 48: void lcdSetPosition(lcdData_t const * const obj, unsigned char position){
[e :U _lcdSetPosition ]
[v F199 `*CS1 ~T0 @X0 1 t ]
[v _obj `C*CS1 ~T0 @X0 1 r1 ]
[v _position `uc ~T0 @X0 1 r2 ]
[f ]
[; ;lcd.c: 49: obj->ctrlRS(0);
"49
[e ( *U . *U _obj 1 (1 -> -> 0 `i `uc ]
[; ;lcd.c: 50: lcdWriteData(obj, (0x80U) + position);
"50
[e ( _lcdWriteData (2 , _obj -> + -> 128 `ui -> _position `ui `uc ]
[; ;lcd.c: 51: }
"51
[e :UE 6 ]
}
"52
[v _lcdWriteData `(v ~T0 @X0 1 sf2`C*CS1`uc ]
{
[; ;lcd.c: 52: static void lcdWriteData( lcdData_t const * const obj, unsigned char c){
[e :U _lcdWriteData ]
[v F203 `*CS1 ~T0 @X0 1 t ]
[v _obj `C*CS1 ~T0 @X0 1 r1 ]
[v _c `uc ~T0 @X0 1 r2 ]
[f ]
[; ;lcd.c: 53: obj->ctrlEnable(1);
"53
[e ( *U . *U _obj 0 (1 -> -> 1 `i `uc ]
[; ;lcd.c: 54: obj->ctrlData(c) ;
"54
[e ( *U . *U _obj 2 (1 _c ]
[; ;lcd.c: 55: obj->ctrlWait((2));
"55
[e ( *U . *U _obj 3 (1 -> -> -> 2 `i `l `ul ]
[; ;lcd.c: 56: obj->ctrlEnable(0);
"56
[e ( *U . *U _obj 0 (1 -> -> 0 `i `uc ]
[; ;lcd.c: 57: }
"57
[e :UE 7 ]
}
"59
[v _lcdPutsInLine1 `(v ~T0 @X0 1 ef3`C*CS1`*Cuc`uc ]
{
[; ;lcd.c: 59: void lcdPutsInLine1(lcdData_t const * const obj, const char *s, uint8_t initPos){
[e :U _lcdPutsInLine1 ]
[v F210 `*CS1 ~T0 @X0 1 t ]
[v _obj `C*CS1 ~T0 @X0 1 r1 ]
[v _s `*Cuc ~T0 @X0 1 r2 ]
[v _initPos `uc ~T0 @X0 1 r3 ]
[f ]
[; ;lcd.c: 60: lcdSetPosition(obj, 0 + initPos);
"60
[e ( _lcdSetPosition (2 , _obj -> + -> 0 `i -> _initPos `i `uc ]
"61
[v _i `i ~T0 @X0 1 a ]
[; ;lcd.c: 61: int i = 0;
[e = _i -> 0 `i ]
[; ;lcd.c: 62: while(s[i]){
"62
[e $U 9  ]
[e :U 10 ]
{
[; ;lcd.c: 63: obj->ctrlRS(1);
"63
[e ( *U . *U _obj 1 (1 -> -> 1 `i `uc ]
[; ;lcd.c: 64: lcdWriteData(obj, s[i++]);
"64
[e ( _lcdWriteData (2 , _obj *U + _s * -> ++ _i -> 1 `i `x -> -> # *U _s `i `x ]
"65
}
[e :U 9 ]
"62
[e $ != -> *U + _s * -> _i `x -> -> # *U _s `i `x `i -> -> -> 0 `i `Cuc `i 10  ]
[e :U 11 ]
[; ;lcd.c: 65: }
[; ;lcd.c: 66: }
"66
[e :UE 8 ]
}
"68
[v _lcdPutsInLine2 `(v ~T0 @X0 1 ef3`C*CS1`*Cuc`uc ]
{
[; ;lcd.c: 68: void lcdPutsInLine2(lcdData_t const * const obj, const char *s, uint8_t initPos){
[e :U _lcdPutsInLine2 ]
[v F216 `*CS1 ~T0 @X0 1 t ]
[v _obj `C*CS1 ~T0 @X0 1 r1 ]
[v _s `*Cuc ~T0 @X0 1 r2 ]
[v _initPos `uc ~T0 @X0 1 r3 ]
[f ]
[; ;lcd.c: 69: lcdSetPosition(obj, (0x40U) + initPos);
"69
[e ( _lcdSetPosition (2 , _obj -> + -> 64 `ui -> _initPos `ui `uc ]
"70
[v _i `i ~T0 @X0 1 a ]
[; ;lcd.c: 70: int i = 0;
[e = _i -> 0 `i ]
[; ;lcd.c: 71: while(s[i]){
"71
[e $U 13  ]
[e :U 14 ]
{
[; ;lcd.c: 72: obj->ctrlRS(1);
"72
[e ( *U . *U _obj 1 (1 -> -> 1 `i `uc ]
[; ;lcd.c: 73: lcdWriteData(obj, s[i++]);
"73
[e ( _lcdWriteData (2 , _obj *U + _s * -> ++ _i -> 1 `i `x -> -> # *U _s `i `x ]
"74
}
[e :U 13 ]
"71
[e $ != -> *U + _s * -> _i `x -> -> # *U _s `i `x `i -> -> -> 0 `i `Cuc `i 14  ]
[e :U 15 ]
[; ;lcd.c: 74: }
[; ;lcd.c: 75: }
"75
[e :UE 12 ]
}
"78
[v _lcdPuts `(v ~T0 @X0 1 ef2`C*CS1`*Cuc ]
{
[; ;lcd.c: 78: void lcdPuts(lcdData_t const * const obj, const char *s){
[e :U _lcdPuts ]
[v F222 `*CS1 ~T0 @X0 1 t ]
[v _obj `C*CS1 ~T0 @X0 1 r1 ]
[v _s `*Cuc ~T0 @X0 1 r2 ]
[f ]
"80
[v _i `uc ~T0 @X0 1 a ]
[; ;lcd.c: 80: uint8_t i = 0;
[e = _i -> -> 0 `i `uc ]
[v F226 `uc ~T0 @X0 -> 16 `i s ]
[i F226
:U ..
"82
-> -> 0 `i `uc
..
]
[v _line1 `uc ~T0 @X0 -> 16 `i a ]
[; ;lcd.c: 82: char line1[(16)] = {0};
[e = _line1 F226 ]
[v F228 `uc ~T0 @X0 -> 16 `i s ]
[i F228
:U ..
"83
-> -> 0 `i `uc
..
]
[v _line2 `uc ~T0 @X0 -> 16 `i a ]
[; ;lcd.c: 83: char line2[(16)] = {0};
[e = _line2 F228 ]
[; ;lcd.c: 84: if(strlen(s) >= (16)){
"84
[e $ ! >= ( _strlen (1 _s -> -> 16 `i `ui 17  ]
{
[; ;lcd.c: 85: memcpy(line1,s,(16));
"85
[e ( _memcpy (3 , , -> &U _line1 `*v -> _s `*Cv -> -> 16 `i `ui ]
[; ;lcd.c: 86: memcpy(line2,s+(16),strlen(s) -(16) );
"86
[e ( _memcpy (3 , , -> &U _line2 `*v -> + _s * -> -> 16 `i `x -> -> # *U _s `i `x `*Cv - ( _strlen (1 _s -> -> 16 `i `ui ]
"88
}
[; ;lcd.c: 88: }else{
[e $U 18  ]
[e :U 17 ]
{
[; ;lcd.c: 89: memcpy(line1,s,strlen(s));
"89
[e ( _memcpy (3 , , -> &U _line1 `*v -> _s `*Cv ( _strlen (1 _s ]
"90
}
[e :U 18 ]
[; ;lcd.c: 90: }
[; ;lcd.c: 91: lcdPutsInLine1(obj, line1, 0);
"91
[e ( _lcdPutsInLine1 (3 , , _obj -> &U _line1 `*Cuc -> -> 0 `i `uc ]
[; ;lcd.c: 92: lcdPutsInLine2(obj, line2, 0);
"92
[e ( _lcdPutsInLine2 (3 , , _obj -> &U _line2 `*Cuc -> -> 0 `i `uc ]
[; ;lcd.c: 106: }
"106
[e :UE 16 ]
}
"109
[v _lcdPutch `(v ~T0 @X0 1 ef2`C*CS1`uc ]
{
[; ;lcd.c: 109: void lcdPutch (lcdData_t const * const obj, unsigned char c){
[e :U _lcdPutch ]
[v F230 `*CS1 ~T0 @X0 1 t ]
[v _obj `C*CS1 ~T0 @X0 1 r1 ]
[v _c `uc ~T0 @X0 1 r2 ]
[f ]
[; ;lcd.c: 110: obj->ctrlRS(1);
"110
[e ( *U . *U _obj 1 (1 -> -> 1 `i `uc ]
[; ;lcd.c: 111: lcdWriteData(obj, c);
"111
[e ( _lcdWriteData (2 , _obj _c ]
[; ;lcd.c: 112: }
"112
[e :UE 19 ]
}
