

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Thu Mar 17 00:00:52 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	functab,global,class=ENTRY,delta=2
    30                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    32                           	dabs	1,0x7E,2
    33  0000                     
    34                           ; Version 2.40
    35                           ; Generated 17/11/2021 GMT
    36                           ; 
    37                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F887 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  0007                     	;# 
    77  0008                     	;# 
    78  0009                     	;# 
    79  000A                     	;# 
    80  000B                     	;# 
    81  000C                     	;# 
    82  000D                     	;# 
    83  000E                     	;# 
    84  000E                     	;# 
    85  000F                     	;# 
    86  0010                     	;# 
    87  0011                     	;# 
    88  0012                     	;# 
    89  0013                     	;# 
    90  0014                     	;# 
    91  0015                     	;# 
    92  0015                     	;# 
    93  0016                     	;# 
    94  0017                     	;# 
    95  0018                     	;# 
    96  0019                     	;# 
    97  001A                     	;# 
    98  001B                     	;# 
    99  001B                     	;# 
   100  001C                     	;# 
   101  001D                     	;# 
   102  001E                     	;# 
   103  001F                     	;# 
   104  0081                     	;# 
   105  0085                     	;# 
   106  0086                     	;# 
   107  0087                     	;# 
   108  0088                     	;# 
   109  0089                     	;# 
   110  008C                     	;# 
   111  008D                     	;# 
   112  008E                     	;# 
   113  008F                     	;# 
   114  0090                     	;# 
   115  0091                     	;# 
   116  0092                     	;# 
   117  0093                     	;# 
   118  0093                     	;# 
   119  0093                     	;# 
   120  0094                     	;# 
   121  0095                     	;# 
   122  0096                     	;# 
   123  0097                     	;# 
   124  0098                     	;# 
   125  0099                     	;# 
   126  009A                     	;# 
   127  009B                     	;# 
   128  009C                     	;# 
   129  009D                     	;# 
   130  009E                     	;# 
   131  009F                     	;# 
   132  0105                     	;# 
   133  0107                     	;# 
   134  0108                     	;# 
   135  0109                     	;# 
   136  010C                     	;# 
   137  010C                     	;# 
   138  010D                     	;# 
   139  010E                     	;# 
   140  010F                     	;# 
   141  0185                     	;# 
   142  0187                     	;# 
   143  0188                     	;# 
   144  0189                     	;# 
   145  018C                     	;# 
   146  018D                     	;# 
   147  0000                     	;# 
   148  0001                     	;# 
   149  0002                     	;# 
   150  0003                     	;# 
   151  0004                     	;# 
   152  0005                     	;# 
   153  0006                     	;# 
   154  0007                     	;# 
   155  0008                     	;# 
   156  0009                     	;# 
   157  000A                     	;# 
   158  000B                     	;# 
   159  000C                     	;# 
   160  000D                     	;# 
   161  000E                     	;# 
   162  000E                     	;# 
   163  000F                     	;# 
   164  0010                     	;# 
   165  0011                     	;# 
   166  0012                     	;# 
   167  0013                     	;# 
   168  0014                     	;# 
   169  0015                     	;# 
   170  0015                     	;# 
   171  0016                     	;# 
   172  0017                     	;# 
   173  0018                     	;# 
   174  0019                     	;# 
   175  001A                     	;# 
   176  001B                     	;# 
   177  001B                     	;# 
   178  001C                     	;# 
   179  001D                     	;# 
   180  001E                     	;# 
   181  001F                     	;# 
   182  0081                     	;# 
   183  0085                     	;# 
   184  0086                     	;# 
   185  0087                     	;# 
   186  0088                     	;# 
   187  0089                     	;# 
   188  008C                     	;# 
   189  008D                     	;# 
   190  008E                     	;# 
   191  008F                     	;# 
   192  0090                     	;# 
   193  0091                     	;# 
   194  0092                     	;# 
   195  0093                     	;# 
   196  0093                     	;# 
   197  0093                     	;# 
   198  0094                     	;# 
   199  0095                     	;# 
   200  0096                     	;# 
   201  0097                     	;# 
   202  0098                     	;# 
   203  0099                     	;# 
   204  009A                     	;# 
   205  009B                     	;# 
   206  009C                     	;# 
   207  009D                     	;# 
   208  009E                     	;# 
   209  009F                     	;# 
   210  0105                     	;# 
   211  0107                     	;# 
   212  0108                     	;# 
   213  0109                     	;# 
   214  010C                     	;# 
   215  010C                     	;# 
   216  010D                     	;# 
   217  010E                     	;# 
   218  010F                     	;# 
   219  0185                     	;# 
   220  0187                     	;# 
   221  0188                     	;# 
   222  0189                     	;# 
   223  018C                     	;# 
   224  018D                     	;# 
   225  0000                     	;# 
   226  0001                     	;# 
   227  0002                     	;# 
   228  0003                     	;# 
   229  0004                     	;# 
   230  0005                     	;# 
   231  0006                     	;# 
   232  0007                     	;# 
   233  0008                     	;# 
   234  0009                     	;# 
   235  000A                     	;# 
   236  000B                     	;# 
   237  000C                     	;# 
   238  000D                     	;# 
   239  000E                     	;# 
   240  000E                     	;# 
   241  000F                     	;# 
   242  0010                     	;# 
   243  0011                     	;# 
   244  0012                     	;# 
   245  0013                     	;# 
   246  0014                     	;# 
   247  0015                     	;# 
   248  0015                     	;# 
   249  0016                     	;# 
   250  0017                     	;# 
   251  0018                     	;# 
   252  0019                     	;# 
   253  001A                     	;# 
   254  001B                     	;# 
   255  001B                     	;# 
   256  001C                     	;# 
   257  001D                     	;# 
   258  001E                     	;# 
   259  001F                     	;# 
   260  0081                     	;# 
   261  0085                     	;# 
   262  0086                     	;# 
   263  0087                     	;# 
   264  0088                     	;# 
   265  0089                     	;# 
   266  008C                     	;# 
   267  008D                     	;# 
   268  008E                     	;# 
   269  008F                     	;# 
   270  0090                     	;# 
   271  0091                     	;# 
   272  0092                     	;# 
   273  0093                     	;# 
   274  0093                     	;# 
   275  0093                     	;# 
   276  0094                     	;# 
   277  0095                     	;# 
   278  0096                     	;# 
   279  0097                     	;# 
   280  0098                     	;# 
   281  0099                     	;# 
   282  009A                     	;# 
   283  009B                     	;# 
   284  009C                     	;# 
   285  009D                     	;# 
   286  009E                     	;# 
   287  009F                     	;# 
   288  0105                     	;# 
   289  0107                     	;# 
   290  0108                     	;# 
   291  0109                     	;# 
   292  010C                     	;# 
   293  010C                     	;# 
   294  010D                     	;# 
   295  010E                     	;# 
   296  010F                     	;# 
   297  0185                     	;# 
   298  0187                     	;# 
   299  0188                     	;# 
   300  0189                     	;# 
   301  018C                     	;# 
   302  018D                     	;# 
   303                           
   304                           	psect	idataBANK0
   305  03EC                     __pidataBANK0:
   306                           
   307                           ;initializer for main@F1434
   308  03EC  340E               	retlw	14
   309  03ED  340E               	retlw	14
   310  03EE  3404               	retlw	4
   311  03EF  3404               	retlw	4
   312  03F0  341F               	retlw	31
   313  03F1  3404               	retlw	4
   314  03F2  340A               	retlw	10
   315  03F3  340A               	retlw	10
   316                           
   317                           ;initializer for main@F1432
   318  03F4  3410               	retlw	16
   319  03F5  3410               	retlw	16
   320  03F6  3416               	retlw	22
   321  03F7  3419               	retlw	25
   322  03F8  3411               	retlw	17
   323  03F9  3411               	retlw	17
   324  03FA  341E               	retlw	30
   325                           
   326                           	psect	idataBANK1
   327  03FB                     __pidataBANK1:
   328                           
   329                           ;initializer for main@F1438
   330  03FB  3400               	retlw	0
   331  03FC  3400               	retlw	0
   332  03FD  340A               	retlw	10
   333  03FE  341F               	retlw	31
   334  03FF  341F               	retlw	31
   335  0400  340E               	retlw	14
   336  0401  3404               	retlw	4
   337  0402  3400               	retlw	0
   338                           
   339                           ;initializer for main@F1436
   340  0403  3400               	retlw	0
   341  0404  3400               	retlw	0
   342  0405  340A               	retlw	10
   343  0406  3415               	retlw	21
   344  0407  3411               	retlw	17
   345  0408  340A               	retlw	10
   346  0409  3404               	retlw	4
   347  040A  3400               	retlw	0
   348  0008                     _PORTDbits	set	8
   349  0007                     _PORTC	set	7
   350  0008                     _PORTD	set	8
   351  0006                     _PORTB	set	6
   352  0087                     _TRISC	set	135
   353  0086                     _TRISB	set	134
   354  0088                     _TRISD	set	136
   355                           
   356                           	psect	strings
   357  0015                     __pstrings:
   358  0015                     stringtab:
   359  0015                     __stringtab:
   360                           
   361                           ;	String table - string pointers are 1 byte each
   362  0015  1BFF               	btfsc	btemp+1,7
   363  0016  281F               	ljmp	stringcode
   364  0017  1383               	bcf	3,7
   365  0018  187F               	btfsc	btemp+1,0
   366  0019  1783               	bsf	3,7
   367  001A  0800               	movf	0,w
   368  001B  0A84               	incf	4,f
   369  001C  1903               	skipnz
   370  001D  0AFF               	incf	btemp+1,f
   371  001E  0008               	return
   372  001F                     stringcode:
   373  001F                     stringdir:
   374  001F  3000               	movlw	high stringdir
   375  0020  008A               	movwf	10
   376  0021  0804               	movf	4,w
   377  0022  0A84               	incf	4,f
   378  0023  0782               	addwf	2,f
   379  0024                     __stringbase:
   380  0024  3400               	retlw	0
   381  0025                     __end_of__stringtab:
   382  0025                     STR_1:
   383  0025  3441               	retlw	65	;'A'
   384  0026  3464               	retlw	100	;'d'
   385  0027  3472               	retlw	114	;'r'
   386  0028  3469               	retlw	105	;'i'
   387  0029  3461               	retlw	97	;'a'
   388  002A  346E               	retlw	110	;'n'
   389  002B  3461               	retlw	97	;'a'
   390  002C  3420               	retlw	32	;' '
   391  002D  3454               	retlw	84	;'T'
   392  002E  3445               	retlw	69	;'E'
   393  002F  3420               	retlw	32	;' '
   394  0030  3441               	retlw	65	;'A'
   395  0031  344D               	retlw	77	;'M'
   396  0032  344F               	retlw	79	;'O'
   397  0033  3400               	retlw	0
   398                           
   399                           	psect	cinit
   400  07D1                     start_initialization:	
   401                           ; #config settings
   402                           
   403  07D1                     __initialization:
   404                           
   405                           ; Initialize objects allocated to BANK1
   406  07D1  1383               	bcf	3,7	;select IRP bank0
   407  07D2  30D0               	movlw	low (__pdataBANK1+16)
   408  07D3  00FD               	movwf	btemp+-1
   409  07D4  3003               	movlw	high __pidataBANK1
   410  07D5  00FE               	movwf	btemp
   411  07D6  30FB               	movlw	low __pidataBANK1
   412  07D7  00FF               	movwf	btemp+1
   413  07D8  30C0               	movlw	low __pdataBANK1
   414  07D9  0084               	movwf	4
   415  07DA  120A  118A  240F  120A  118A  	fcall	init_ram0
   416                           
   417                           ; Initialize objects allocated to BANK0
   418  07DF  3061               	movlw	low (__pdataBANK0+15)
   419  07E0  00FD               	movwf	btemp+-1
   420  07E1  3003               	movlw	high __pidataBANK0
   421  07E2  00FE               	movwf	btemp
   422  07E3  30EC               	movlw	low __pidataBANK0
   423  07E4  00FF               	movwf	btemp+1
   424  07E5  3052               	movlw	low __pdataBANK0
   425  07E6  0084               	movwf	4
   426  07E7  120A  118A  240F  120A  118A  	fcall	init_ram0
   427                           
   428                           ; Clear objects allocated to BANK1
   429  07EC  30A0               	movlw	low __pbssBANK1
   430  07ED  0084               	movwf	4
   431  07EE  30C0               	movlw	low (__pbssBANK1+32)
   432  07EF  120A  118A  23E4  120A  118A  	fcall	clear_ram0
   433                           
   434                           ; Clear objects allocated to BANK0
   435  07F4  3061               	movlw	low __pbssBANK0
   436  07F5  0084               	movwf	4
   437  07F6  306B               	movlw	low (__pbssBANK0+10)
   438  07F7  120A  118A  23E4  120A  118A  	fcall	clear_ram0
   439  07FC                     end_of_initialization:	
   440                           ;End of C runtime variable initialization code
   441                           
   442  07FC                     __end_of__initialization:
   443  07FC  0183               	clrf	3
   444  07FD  120A  118A  2F00   	ljmp	_main	;jump to C main() function
   445                           
   446                           	psect	bssBANK0
   447  0061                     __pbssBANK0:
   448  0061                     _temp:
   449  0061                     	ds	2
   450  0063                     _unidades:
   451  0063                     	ds	2
   452  0065                     _decenas:
   453  0065                     	ds	2
   454  0067                     _centenas:
   455  0067                     	ds	2
   456  0069                     _cont:
   457  0069                     	ds	2
   458                           
   459                           	psect	dataBANK0
   460  0052                     __pdataBANK0:
   461  0052                     main@F1434:
   462  0052                     	ds	8
   463  005A                     main@F1432:
   464  005A                     	ds	7
   465                           
   466                           	psect	bssBANK1
   467  00A0                     __pbssBANK1:
   468  00A0                     lcdPuts@F1503:
   469  00A0                     	ds	16
   470  00B0                     lcdPuts@F1501:
   471  00B0                     	ds	16
   472                           
   473                           	psect	dataBANK1
   474  00C0                     __pdataBANK1:
   475  00C0                     main@F1438:
   476  00C0                     	ds	8
   477  00C8                     main@F1436:
   478  00C8                     	ds	8
   479                           
   480                           	psect	inittext
   481  040B                     init_fetch0:	
   482                           ;	Called with low address in FSR and high address in W
   483                           
   484  040B  087E               	movf	btemp,w
   485  040C  008A               	movwf	10
   486  040D  087F               	movf	btemp+1,w
   487  040E  0082               	movwf	2
   488  040F                     init_ram0:	
   489                           ;Called with:
   490                           ;	high address of idata address in btemp 
   491                           ;	low address of idata address in btemp+1 
   492                           ;	low address of data in FSR
   493                           ;	high address + 1 of data in btemp-1
   494                           
   495  040F  120A  118A  240B  120A  118A  	fcall	init_fetch0
   496  0414  0080               	movwf	0
   497  0415  0A84               	incf	4,f
   498  0416  0804               	movf	4,w
   499  0417  067D               	xorwf	btemp+-1,w
   500  0418  1903               	btfsc	3,2
   501  0419  3400               	retlw	0
   502  041A  0AFF               	incf	btemp+1,f
   503  041B  1903               	btfsc	3,2
   504  041C  0AFE               	incf	btemp,f
   505  041D  2C0F               	goto	init_ram0
   506                           
   507                           	psect	clrtext
   508  03E4                     clear_ram0:	
   509                           ;	Called with FSR containing the base address, and
   510                           ;	W with the last address+1
   511                           
   512  03E4  0064               	clrwdt	;clear the watchdog before getting into this loop
   513  03E5                     clrloop0:
   514  03E5  0180               	clrf	0	;clear RAM location pointed to by FSR
   515  03E6  0A84               	incf	4,f	;increment pointer
   516  03E7  0604               	xorwf	4,w	;XOR with final address
   517  03E8  1903               	btfsc	3,2	;have we reached the end yet?
   518  03E9  3400               	retlw	0	;all done for this memory range, return
   519  03EA  0604               	xorwf	4,w	;XOR again to restore value
   520  03EB  2BE5               	goto	clrloop0	;do the next byte
   521                           
   522                           	psect	cstackCOMMON
   523  0070                     __pcstackCOMMON:
   524  0070                     ?_ctrlEn:
   525  0070                     ?_ctrlRs:	
   526                           ; 1 bytes @ 0x0
   527                           
   528  0070                     ?_ctrlData:	
   529                           ; 1 bytes @ 0x0
   530                           
   531  0070                     ?_delay_ms:	
   532                           ; 1 bytes @ 0x0
   533                           
   534  0070                     ?_lcdConfig:	
   535                           ; 1 bytes @ 0x0
   536                           
   537  0070                     ?_main:	
   538                           ; 1 bytes @ 0x0
   539                           
   540  0070                     ctrlEn@status:	
   541                           ; 1 bytes @ 0x0
   542                           
   543  0070                     ctrlRs@status:	
   544                           ; 1 bytes @ 0x0
   545                           
   546  0070                     ctrlData@Data:	
   547                           ; 1 bytes @ 0x0
   548                           
   549  0070                     delay_ms@milliseconds:	
   550                           ; 1 bytes @ 0x0
   551                           
   552                           
   553                           ; 4 bytes @ 0x0
   554  0070                     	ds	1
   555  0071                     ??_ctrlEn:
   556  0071                     ??_ctrlRs:	
   557                           ; 1 bytes @ 0x1
   558                           
   559  0071                     ??_ctrlData:	
   560                           ; 1 bytes @ 0x1
   561                           
   562                           
   563                           ; 1 bytes @ 0x1
   564  0071                     	ds	3
   565  0074                     ??_delay_ms:
   566                           
   567                           ; 1 bytes @ 0x4
   568  0074                     	ds	4
   569  0078                     ?_lcdWriteRegister:
   570  0078                     ?_lcdWriteData:	
   571                           ; 1 bytes @ 0x8
   572                           
   573  0078                     lcdWriteRegister@regAddr:	
   574                           ; 1 bytes @ 0x8
   575                           
   576  0078                     lcdWriteData@data:	
   577                           ; 1 bytes @ 0x8
   578                           
   579                           
   580                           ; 1 bytes @ 0x8
   581  0078                     	ds	1
   582  0079                     ??_lcdWriteRegister:
   583  0079                     ??_lcdWriteData:	
   584                           ; 1 bytes @ 0x9
   585                           
   586                           
   587                           ; 1 bytes @ 0x9
   588  0079                     	ds	2
   589  007B                     lcdWriteRegister@obj:
   590  007B                     lcdWriteData@obj:	
   591                           ; 1 bytes @ 0xB
   592                           
   593                           
   594                           ; 1 bytes @ 0xB
   595  007B                     	ds	1
   596  007C                     ?_lcdSetPosition:
   597  007C                     ?_lcdPutch:	
   598                           ; 1 bytes @ 0xC
   599                           
   600  007C                     ??_lcdConfig:	
   601                           ; 1 bytes @ 0xC
   602                           
   603  007C                     lcdSetPosition@position:	
   604                           ; 1 bytes @ 0xC
   605                           
   606  007C                     lcdPutch@c:	
   607                           ; 1 bytes @ 0xC
   608                           
   609                           
   610                           ; 1 bytes @ 0xC
   611  007C                     	ds	1
   612  007D                     ??_lcdSetPosition:
   613  007D                     ??_lcdPutch:	
   614                           ; 1 bytes @ 0xD
   615                           
   616  007D                     lcdConfig@obj:	
   617                           ; 1 bytes @ 0xD
   618                           
   619                           
   620                           ; 1 bytes @ 0xD
   621  007D                     	ds	1
   622                           
   623                           	psect	cstackBANK0
   624  0020                     __pcstackBANK0:
   625  0020                     lcdSetPosition@obj:
   626  0020                     lcdPutch@obj:	
   627                           ; 1 bytes @ 0x0
   628                           
   629                           
   630                           ; 1 bytes @ 0x0
   631  0020                     	ds	1
   632  0021                     ?_lcdInit:
   633  0021                     ?_lcdCreateCustomCharacter:	
   634                           ; 1 bytes @ 0x1
   635                           
   636  0021                     ?_lcdPutsInLine1:	
   637                           ; 1 bytes @ 0x1
   638                           
   639  0021                     lcdInit@E:	
   640                           ; 1 bytes @ 0x1
   641                           
   642  0021                     lcdCreateCustomCharacter@Pattern:	
   643                           ; 1 bytes @ 0x1
   644                           
   645  0021                     lcdPutsInLine1@s:	
   646                           ; 1 bytes @ 0x1
   647                           
   648                           
   649                           ; 2 bytes @ 0x1
   650  0021                     	ds	1
   651  0022                     lcdInit@RS:
   652  0022                     lcdCreateCustomCharacter@Location:	
   653                           ; 1 bytes @ 0x2
   654                           
   655                           
   656                           ; 1 bytes @ 0x2
   657  0022                     	ds	1
   658  0023                     ??_lcdCreateCustomCharacter:
   659  0023                     lcdInit@data:	
   660                           ; 1 bytes @ 0x3
   661                           
   662  0023                     lcdPutsInLine1@initPos:	
   663                           ; 1 bytes @ 0x3
   664                           
   665                           
   666                           ; 1 bytes @ 0x3
   667  0023                     	ds	1
   668  0024                     ??_lcdPutsInLine1:
   669  0024                     lcdInit@wait:	
   670                           ; 1 bytes @ 0x4
   671                           
   672                           
   673                           ; 1 bytes @ 0x4
   674  0024                     	ds	1
   675  0025                     ??_lcdInit:
   676  0025                     lcdCreateCustomCharacter@obj:	
   677                           ; 1 bytes @ 0x5
   678                           
   679                           
   680                           ; 1 bytes @ 0x5
   681  0025                     	ds	1
   682  0026                     lcdInit@obj:
   683  0026                     lcdCreateCustomCharacter@i:	
   684                           ; 1 bytes @ 0x6
   685                           
   686                           
   687                           ; 2 bytes @ 0x6
   688  0026                     	ds	2
   689  0028                     lcdPutsInLine1@i:
   690                           
   691                           ; 2 bytes @ 0x8
   692  0028                     	ds	2
   693  002A                     lcdPutsInLine1@obj:
   694                           
   695                           ; 1 bytes @ 0xA
   696  002A                     	ds	1
   697  002B                     ??_main:
   698                           
   699                           ; 1 bytes @ 0xB
   700  002B                     	ds	4
   701  002F                     main@Pattern4:
   702                           
   703                           ; 8 bytes @ 0xF
   704  002F                     	ds	8
   705  0037                     main@b:
   706                           
   707                           ; 7 bytes @ 0x17
   708  0037                     	ds	7
   709  003E                     main@Pattern1:
   710                           
   711                           ; 8 bytes @ 0x1E
   712  003E                     	ds	8
   713  0046                     main@Pattern3:
   714                           
   715                           ; 8 bytes @ 0x26
   716  0046                     	ds	8
   717  004E                     main@objLcd:
   718                           
   719                           ; 4 bytes @ 0x2E
   720  004E                     	ds	4
   721                           
   722                           	psect	maintext
   723  0700                     __pmaintext:	
   724 ;;
   725 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   726 ;;
   727 ;; *************** function _main *****************
   728 ;; Defined at:
   729 ;;		line 43 in file "newmain.c"
   730 ;; Parameters:    Size  Location     Type
   731 ;;		None
   732 ;; Auto vars:     Size  Location     Type
   733 ;;  Pattern3        8   38[BANK0 ] unsigned char [8]
   734 ;;  Pattern1        8   30[BANK0 ] unsigned char [8]
   735 ;;  Pattern4        8   15[BANK0 ] unsigned char [8]
   736 ;;  b               7   23[BANK0 ] unsigned char [7]
   737 ;;  objLcd          4   46[BANK0 ] struct .
   738 ;; Return value:  Size  Location     Type
   739 ;;                  1    wreg      void 
   740 ;; Registers used:
   741 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   742 ;; Tracked objects:
   743 ;;		On entry : B00/0
   744 ;;		On exit  : 0/0
   745 ;;		Unchanged: 0/0
   746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   747 ;;      Params:         0       0       0       0       0
   748 ;;      Locals:         0      35       0       0       0
   749 ;;      Temps:          0       4       0       0       0
   750 ;;      Totals:         0      39       0       0       0
   751 ;;Total ram usage:       39 bytes
   752 ;; Hardware stack levels required when called: 4
   753 ;; This function calls:
   754 ;;		_lcdCreateCustomCharacter
   755 ;;		_lcdInit
   756 ;;		_lcdPutch
   757 ;;		_lcdPutsInLine1
   758 ;;		_lcdSetPosition
   759 ;; This function is called by:
   760 ;;		Startup code after reset
   761 ;; This function uses a non-reentrant model
   762 ;;
   763                           
   764  0700                     _main:	
   765                           ;psect for function _main
   766                           
   767  0700                     l949:	
   768                           ;incstack = 0
   769                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   770                           
   771                           
   772                           ;newmain.c: 44: TRISD=0;
   773  0700  1683               	bsf	3,5	;RP0=1, select bank1
   774  0701  1303               	bcf	3,6	;RP1=0, select bank1
   775  0702  0188               	clrf	8	;volatile
   776                           
   777                           ;newmain.c: 45: TRISB=0;
   778  0703  0186               	clrf	6	;volatile
   779                           
   780                           ;newmain.c: 46: TRISC=0;
   781  0704  0187               	clrf	7	;volatile
   782                           
   783                           ;newmain.c: 47: PORTB=0;
   784  0705  1283               	bcf	3,5	;RP0=0, select bank0
   785  0706  1303               	bcf	3,6	;RP1=0, select bank0
   786  0707  0186               	clrf	6	;volatile
   787                           
   788                           ;newmain.c: 48: PORTD=0;
   789  0708  0188               	clrf	8	;volatile
   790                           
   791                           ;newmain.c: 49: PORTC=0;
   792  0709  0187               	clrf	7	;volatile
   793  070A                     l951:
   794                           
   795                           ;newmain.c: 51: lcdData_t objLcd;;newmain.c: 52: lcdInit(&objLcd,ctrlEn, ctrlRs , ctrlDa
      +                          ta, delay_ms );
   796  070A  3007               	movlw	(low (fp__ctrlEn-fpbase))& (0+255)
   797  070B  00AB               	movwf	??_main
   798  070C  082B               	movf	??_main,w
   799  070D  00A1               	movwf	lcdInit@E
   800  070E  3001               	movlw	(low (fp__ctrlRs-fpbase))& (0+255)
   801  070F  00AC               	movwf	??_main+1
   802  0710  082C               	movf	??_main+1,w
   803  0711  00A2               	movwf	lcdInit@RS
   804  0712  3004               	movlw	(low (fp__ctrlData-fpbase))& (0+255)
   805  0713  00AD               	movwf	??_main+2
   806  0714  082D               	movf	??_main+2,w
   807  0715  00A3               	movwf	lcdInit@data
   808  0716  300A               	movlw	(low (fp__delay_ms-fpbase))& (0+255)
   809  0717  00AE               	movwf	??_main+3
   810  0718  082E               	movf	??_main+3,w
   811  0719  00A4               	movwf	lcdInit@wait
   812  071A  304E               	movlw	(low (main@objLcd| 0))& (0+255)
   813  071B  120A  118A  2481  120A  118A  	fcall	_lcdInit
   814  0720                     l953:
   815                           
   816                           ;newmain.c: 53: char b[7]={0x10,0x10,0x16,0x19,0x11,0x11,0x1E};
   817  0720  3037               	movlw	main@b& (0+255)
   818  0721  0084               	movwf	4
   819  0722  305A               	movlw	low main@F1432
   820  0723  1283               	bcf	3,5	;RP0=0, select bank0
   821  0724  1303               	bcf	3,6	;RP1=0, select bank0
   822  0725  00AB               	movwf	??_main
   823  0726  0804               	movf	4,w
   824  0727  00AC               	movwf	??_main+1
   825  0728  3007               	movlw	7
   826  0729  00AD               	movwf	??_main+2
   827  072A                     u310:
   828  072A  082B               	movf	??_main,w
   829  072B  0084               	movwf	4
   830  072C  1383               	bcf	3,7	;select IRP bank0
   831  072D  0800               	movf	0,w
   832  072E  00AE               	movwf	??_main+3
   833  072F  0AAB               	incf	??_main,f
   834  0730  082C               	movf	??_main+1,w
   835  0731  0084               	movwf	4
   836  0732  082E               	movf	??_main+3,w
   837  0733  0080               	movwf	0
   838  0734  0AAC               	incf	??_main+1,f
   839  0735  0BAD               	decfsz	??_main+2,f
   840  0736  2F2A               	goto	u310
   841  0737                     l955:
   842                           
   843                           ;newmain.c: 54: unsigned char Pattern1 [ ] = { 0x0e, 0x0e, 0x04, 0x04, 0x1f, 0x04, 0x0a,
      +                           0x0a } ;
   844  0737  303E               	movlw	main@Pattern1& (0+255)
   845  0738  0084               	movwf	4
   846  0739  3052               	movlw	low main@F1434
   847  073A  00AB               	movwf	??_main
   848  073B  0804               	movf	4,w
   849  073C  00AC               	movwf	??_main+1
   850  073D  3008               	movlw	8
   851  073E  00AD               	movwf	??_main+2
   852  073F                     u320:
   853  073F  082B               	movf	??_main,w
   854  0740  0084               	movwf	4
   855  0741  1383               	bcf	3,7	;select IRP bank0
   856  0742  0800               	movf	0,w
   857  0743  00AE               	movwf	??_main+3
   858  0744  0AAB               	incf	??_main,f
   859  0745  082C               	movf	??_main+1,w
   860  0746  0084               	movwf	4
   861  0747  082E               	movf	??_main+3,w
   862  0748  0080               	movwf	0
   863  0749  0AAC               	incf	??_main+1,f
   864  074A  0BAD               	decfsz	??_main+2,f
   865  074B  2F3F               	goto	u320
   866  074C                     l957:
   867                           
   868                           ;newmain.c: 55: unsigned char Pattern3[]= {0x00,0x00,0x0a,0x15,0x11,0x0a,0x04,0x00};
   869  074C  3046               	movlw	main@Pattern3& (0+255)
   870  074D  0084               	movwf	4
   871  074E  30C8               	movlw	low main@F1436
   872  074F  00AB               	movwf	??_main
   873  0750  0804               	movf	4,w
   874  0751  00AC               	movwf	??_main+1
   875  0752  3008               	movlw	8
   876  0753  00AD               	movwf	??_main+2
   877  0754                     u330:
   878  0754  082B               	movf	??_main,w
   879  0755  0084               	movwf	4
   880  0756  1383               	bcf	3,7	;select IRP bank1
   881  0757  0800               	movf	0,w
   882  0758  00AE               	movwf	??_main+3
   883  0759  0AAB               	incf	??_main,f
   884  075A  082C               	movf	??_main+1,w
   885  075B  0084               	movwf	4
   886  075C  082E               	movf	??_main+3,w
   887  075D  0080               	movwf	0
   888  075E  0AAC               	incf	??_main+1,f
   889  075F  0BAD               	decfsz	??_main+2,f
   890  0760  2F54               	goto	u330
   891  0761                     l959:
   892                           
   893                           ;newmain.c: 56: unsigned char Pattern4[]= {0x00,0x00,0x0a,0x1f,0x1f,0x0e,0x04,0x00};
   894  0761  302F               	movlw	main@Pattern4& (0+255)
   895  0762  0084               	movwf	4
   896  0763  30C0               	movlw	low main@F1438
   897  0764  00AB               	movwf	??_main
   898  0765  0804               	movf	4,w
   899  0766  00AC               	movwf	??_main+1
   900  0767  3008               	movlw	8
   901  0768  00AD               	movwf	??_main+2
   902  0769                     u340:
   903  0769  082B               	movf	??_main,w
   904  076A  0084               	movwf	4
   905  076B  1383               	bcf	3,7	;select IRP bank1
   906  076C  0800               	movf	0,w
   907  076D  00AE               	movwf	??_main+3
   908  076E  0AAB               	incf	??_main,f
   909  076F  082C               	movf	??_main+1,w
   910  0770  0084               	movwf	4
   911  0771  082E               	movf	??_main+3,w
   912  0772  0080               	movwf	0
   913  0773  0AAC               	incf	??_main+1,f
   914  0774  0BAD               	decfsz	??_main+2,f
   915  0775  2F69               	goto	u340
   916  0776                     l961:
   917                           
   918                           ;newmain.c: 58: lcdCreateCustomCharacter (&objLcd, Pattern1, 1);
   919  0776  303E               	movlw	(low (main@Pattern1| 0))& (0+255)
   920  0777  00AB               	movwf	??_main
   921  0778  082B               	movf	??_main,w
   922  0779  00A1               	movwf	lcdCreateCustomCharacter@Pattern
   923  077A  01A2               	clrf	lcdCreateCustomCharacter@Location
   924  077B  0AA2               	incf	lcdCreateCustomCharacter@Location,f
   925  077C  304E               	movlw	(low (main@objLcd| 0))& (0+255)
   926  077D  120A  118A  24E1  120A  118A  	fcall	_lcdCreateCustomCharacter
   927  0782                     l963:
   928                           
   929                           ;newmain.c: 59: lcdCreateCustomCharacter (&objLcd, Pattern3, 3);
   930  0782  3046               	movlw	(low (main@Pattern3| 0))& (0+255)
   931  0783  1283               	bcf	3,5	;RP0=0, select bank0
   932  0784  1303               	bcf	3,6	;RP1=0, select bank0
   933  0785  00AB               	movwf	??_main
   934  0786  082B               	movf	??_main,w
   935  0787  00A1               	movwf	lcdCreateCustomCharacter@Pattern
   936  0788  3003               	movlw	3
   937  0789  00AC               	movwf	??_main+1
   938  078A  082C               	movf	??_main+1,w
   939  078B  00A2               	movwf	lcdCreateCustomCharacter@Location
   940  078C  304E               	movlw	(low (main@objLcd| 0))& (0+255)
   941  078D  120A  118A  24E1  120A  118A  	fcall	_lcdCreateCustomCharacter
   942  0792                     l965:
   943                           
   944                           ;newmain.c: 65: lcdSetPosition(&objLcd, 0);
   945  0792  01FC               	clrf	lcdSetPosition@position
   946  0793  304E               	movlw	(low (main@objLcd| 0))& (0+255)
   947  0794  120A  118A  2439  120A  118A  	fcall	_lcdSetPosition
   948  0799                     l967:
   949                           
   950                           ;newmain.c: 66: lcdPutch(&objLcd, 0x7e);
   951  0799  307E               	movlw	126
   952  079A  1283               	bcf	3,5	;RP0=0, select bank0
   953  079B  1303               	bcf	3,6	;RP1=0, select bank0
   954  079C  00AB               	movwf	??_main
   955  079D  082B               	movf	??_main,w
   956  079E  00FC               	movwf	lcdPutch@c
   957  079F  304E               	movlw	(low (main@objLcd| 0))& (0+255)
   958  07A0  120A  118A  241E  120A  118A  	fcall	_lcdPutch
   959  07A5                     l969:
   960                           
   961                           ;newmain.c: 67: lcdPutsInLine1(&objLcd, "Adriana TE AMO",1);
   962  07A5  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   963  07A6  1283               	bcf	3,5	;RP0=0, select bank0
   964  07A7  1303               	bcf	3,6	;RP1=0, select bank0
   965  07A8  00A1               	movwf	lcdPutsInLine1@s
   966  07A9  3080               	movlw	128
   967  07AA  00A2               	movwf	lcdPutsInLine1@s+1
   968  07AB  01A3               	clrf	lcdPutsInLine1@initPos
   969  07AC  0AA3               	incf	lcdPutsInLine1@initPos,f
   970  07AD  304E               	movlw	(low (main@objLcd| 0))& (0+255)
   971  07AE  120A  118A  2524  120A  118A  	fcall	_lcdPutsInLine1
   972  07B3                     l971:
   973                           
   974                           ;newmain.c: 72: lcdPutch(&objLcd, 3);
   975  07B3  3003               	movlw	3
   976  07B4  1283               	bcf	3,5	;RP0=0, select bank0
   977  07B5  1303               	bcf	3,6	;RP1=0, select bank0
   978  07B6  00AB               	movwf	??_main
   979  07B7  082B               	movf	??_main,w
   980  07B8  00FC               	movwf	lcdPutch@c
   981  07B9  304E               	movlw	(low (main@objLcd| 0))& (0+255)
   982  07BA  120A  118A  241E  120A  118A  	fcall	_lcdPutch
   983  07BF                     l973:
   984                           
   985                           ;newmain.c: 74: _delay((unsigned long)((500)*(4000000/4000.0)));
   986  07BF  3003               	movlw	3
   987  07C0  1283               	bcf	3,5	;RP0=0, select bank0
   988  07C1  1303               	bcf	3,6	;RP1=0, select bank0
   989  07C2  00AD               	movwf	??_main+2
   990  07C3  308A               	movlw	138
   991  07C4  00AC               	movwf	??_main+1
   992  07C5  3055               	movlw	85
   993  07C6  00AB               	movwf	??_main
   994  07C7                     u437:
   995  07C7  0BAB               	decfsz	??_main,f
   996  07C8  2FC7               	goto	u437
   997  07C9  0BAC               	decfsz	??_main+1,f
   998  07CA  2FC7               	goto	u437
   999  07CB  0BAD               	decfsz	??_main+2,f
  1000  07CC  2FC7               	goto	u437
  1001  07CD  2F92               	goto	l965
  1002  07CE  120A  118A  2800   	ljmp	start
  1003  07D1                     __end_of_main:
  1004                           
  1005                           	psect	text1
  1006  0524                     __ptext1:	
  1007 ;; *************** function _lcdPutsInLine1 *****************
  1008 ;; Defined at:
  1009 ;;		line 92 in file "lcd.c"
  1010 ;; Parameters:    Size  Location     Type
  1011 ;;  obj             1    wreg     const PTR const struct .
  1012 ;;		 -> main@objLcd(4), 
  1013 ;;  s               2    1[BANK0 ] PTR const unsigned char 
  1014 ;;		 -> lcdPuts@line1(16), STR_1(15), 
  1015 ;;  initPos         1    3[BANK0 ] unsigned char 
  1016 ;; Auto vars:     Size  Location     Type
  1017 ;;  obj             1   10[BANK0 ] const PTR const struct .
  1018 ;;		 -> main@objLcd(4), 
  1019 ;;  i               2    8[BANK0 ] int 
  1020 ;; Return value:  Size  Location     Type
  1021 ;;                  1    wreg      void 
  1022 ;; Registers used:
  1023 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1024 ;; Tracked objects:
  1025 ;;		On entry : 0/0
  1026 ;;		On exit  : 0/0
  1027 ;;		Unchanged: 0/0
  1028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1029 ;;      Params:         0       3       0       0       0
  1030 ;;      Locals:         0       3       0       0       0
  1031 ;;      Temps:          0       4       0       0       0
  1032 ;;      Totals:         0      10       0       0       0
  1033 ;;Total ram usage:       10 bytes
  1034 ;; Hardware stack levels used: 1
  1035 ;; Hardware stack levels required when called: 3
  1036 ;; This function calls:
  1037 ;;		_ctrlRs
  1038 ;;		_lcdSetPosition
  1039 ;;		_lcdWriteData
  1040 ;; This function is called by:
  1041 ;;		_main
  1042 ;;		_lcdPuts
  1043 ;; This function uses a non-reentrant model
  1044 ;;
  1045                           
  1046  0524                     _lcdPutsInLine1:	
  1047                           ;psect for function _lcdPutsInLine1
  1048                           
  1049                           
  1050                           ;incstack = 0
  1051                           ; Regs used in _lcdPutsInLine1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1052                           ;lcdPutsInLine1@obj stored from wreg
  1053  0524  1283               	bcf	3,5	;RP0=0, select bank0
  1054  0525  1303               	bcf	3,6	;RP1=0, select bank0
  1055  0526  00AA               	movwf	lcdPutsInLine1@obj
  1056  0527                     l927:
  1057                           
  1058                           ;lcd.c: 93: lcdSetPosition(obj, 0U + initPos);
  1059  0527  0823               	movf	lcdPutsInLine1@initPos,w
  1060  0528  00A4               	movwf	??_lcdPutsInLine1
  1061  0529  0824               	movf	??_lcdPutsInLine1,w
  1062  052A  00FC               	movwf	lcdSetPosition@position
  1063  052B  082A               	movf	lcdPutsInLine1@obj,w
  1064  052C  120A  118A  2439  120A  118A  	fcall	_lcdSetPosition
  1065  0531                     l929:
  1066                           
  1067                           ;lcd.c: 94: int i = 0;
  1068  0531  1283               	bcf	3,5	;RP0=0, select bank0
  1069  0532  1303               	bcf	3,6	;RP1=0, select bank0
  1070  0533  01A8               	clrf	lcdPutsInLine1@i
  1071  0534  01A9               	clrf	lcdPutsInLine1@i+1
  1072                           
  1073                           ;lcd.c: 95: while(s[i]){
  1074  0535  2D6B               	goto	l937
  1075  0536                     l931:
  1076                           
  1077                           ;lcd.c: 96: obj->ctrlRS(1);
  1078  0536  01F0               	clrf	ctrlRs@status
  1079  0537  0AF0               	incf	ctrlRs@status,f
  1080  0538  0A2A               	incf	lcdPutsInLine1@obj,w
  1081  0539  0084               	movwf	4
  1082  053A  1383               	bcf	3,7	;select IRP bank0
  1083  053B  0800               	movf	0,w
  1084  053C  120A  118A  2003  120A  118A  	fcall	fptable
  1085  0541                     l933:
  1086                           
  1087                           ;lcd.c: 97: lcdWriteData(obj, s[i++]);
  1088  0541  1283               	bcf	3,5	;RP0=0, select bank0
  1089  0542  1303               	bcf	3,6	;RP1=0, select bank0
  1090  0543  0828               	movf	lcdPutsInLine1@i,w
  1091  0544  0721               	addwf	lcdPutsInLine1@s,w
  1092  0545  00A5               	movwf	??_lcdPutsInLine1+1
  1093  0546  0822               	movf	lcdPutsInLine1@s+1,w
  1094  0547  00A4               	movwf	??_lcdPutsInLine1
  1095  0548  1803               	skipnc
  1096  0549  0AA4               	incf	??_lcdPutsInLine1,f
  1097  054A  1FA8               	btfss	lcdPutsInLine1@i,7
  1098  054B  2D4D               	goto	u270
  1099  054C  03A4               	decf	??_lcdPutsInLine1,f
  1100  054D                     u270:
  1101  054D  1283               	bcf	3,5	;RP0=0, select bank0
  1102  054E  1303               	bcf	3,6	;RP1=0, select bank0
  1103  054F  0824               	movf	??_lcdPutsInLine1,w
  1104  0550  00A6               	movwf	??_lcdPutsInLine1+2
  1105  0551  0826               	movf	??_lcdPutsInLine1+2,w
  1106  0552  00FF               	movwf	btemp+1
  1107  0553  0825               	movf	??_lcdPutsInLine1+1,w
  1108  0554  0084               	movwf	4
  1109  0555  120A  118A  2015  120A  118A  	fcall	stringtab
  1110  055A  00A7               	movwf	??_lcdPutsInLine1+3
  1111  055B  0827               	movf	??_lcdPutsInLine1+3,w
  1112  055C  00F8               	movwf	lcdWriteData@data
  1113  055D  082A               	movf	lcdPutsInLine1@obj,w
  1114  055E  120A  118A  2588  120A  118A  	fcall	_lcdWriteData
  1115  0563                     l935:
  1116  0563  3001               	movlw	1
  1117  0564  1283               	bcf	3,5	;RP0=0, select bank0
  1118  0565  1303               	bcf	3,6	;RP1=0, select bank0
  1119  0566  07A8               	addwf	lcdPutsInLine1@i,f
  1120  0567  1803               	skipnc
  1121  0568  0AA9               	incf	lcdPutsInLine1@i+1,f
  1122  0569  3000               	movlw	0
  1123  056A  07A9               	addwf	lcdPutsInLine1@i+1,f
  1124  056B                     l937:
  1125  056B  0828               	movf	lcdPutsInLine1@i,w
  1126  056C  0721               	addwf	lcdPutsInLine1@s,w
  1127  056D  00A5               	movwf	??_lcdPutsInLine1+1
  1128  056E  0822               	movf	lcdPutsInLine1@s+1,w
  1129  056F  00A4               	movwf	??_lcdPutsInLine1
  1130  0570  1803               	skipnc
  1131  0571  0AA4               	incf	??_lcdPutsInLine1,f
  1132  0572  1FA8               	btfss	lcdPutsInLine1@i,7
  1133  0573  2D75               	goto	u280
  1134  0574  03A4               	decf	??_lcdPutsInLine1,f
  1135  0575                     u280:
  1136  0575  1283               	bcf	3,5	;RP0=0, select bank0
  1137  0576  1303               	bcf	3,6	;RP1=0, select bank0
  1138  0577  0824               	movf	??_lcdPutsInLine1,w
  1139  0578  00A6               	movwf	??_lcdPutsInLine1+2
  1140  0579  0826               	movf	??_lcdPutsInLine1+2,w
  1141  057A  00FF               	movwf	btemp+1
  1142  057B  0825               	movf	??_lcdPutsInLine1+1,w
  1143  057C  0084               	movwf	4
  1144  057D  120A  118A  2015  120A  118A  	fcall	stringtab
  1145  0582  3A00               	xorlw	0
  1146  0583  1D03               	skipz
  1147  0584  2D86               	goto	u291
  1148  0585  2D87               	goto	u290
  1149  0586                     u291:
  1150  0586  2D36               	goto	l931
  1151  0587                     u290:
  1152  0587                     l120:
  1153  0587  0008               	return
  1154  0588                     __end_of_lcdPutsInLine1:
  1155                           
  1156                           	psect	text2
  1157  0481                     __ptext2:	
  1158 ;; *************** function _lcdInit *****************
  1159 ;; Defined at:
  1160 ;;		line 14 in file "lcd.c"
  1161 ;; Parameters:    Size  Location     Type
  1162 ;;  obj             1    wreg     const PTR struct .
  1163 ;;		 -> main@objLcd(4), 
  1164 ;;  E               1    1[BANK0 ] PTR FTN(unsigned char ,)
  1165 ;;		 -> ctrlEn(1), 
  1166 ;;  RS              1    2[BANK0 ] PTR FTN(unsigned char ,)
  1167 ;;		 -> ctrlRs(1), 
  1168 ;;  data            1    3[BANK0 ] PTR FTN(unsigned char ,)
  1169 ;;		 -> ctrlData(1), 
  1170 ;;  wait            1    4[BANK0 ] PTR FTN(unsigned long ,)
  1171 ;;		 -> delay_ms(1), 
  1172 ;; Auto vars:     Size  Location     Type
  1173 ;;  obj             1    6[BANK0 ] const PTR struct .
  1174 ;;		 -> main@objLcd(4), 
  1175 ;; Return value:  Size  Location     Type
  1176 ;;                  1    wreg      void 
  1177 ;; Registers used:
  1178 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1179 ;; Tracked objects:
  1180 ;;		On entry : 0/0
  1181 ;;		On exit  : 0/0
  1182 ;;		Unchanged: 0/0
  1183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1184 ;;      Params:         0       4       0       0       0
  1185 ;;      Locals:         0       1       0       0       0
  1186 ;;      Temps:          0       1       0       0       0
  1187 ;;      Totals:         0       6       0       0       0
  1188 ;;Total ram usage:        6 bytes
  1189 ;; Hardware stack levels used: 1
  1190 ;; Hardware stack levels required when called: 3
  1191 ;; This function calls:
  1192 ;;		_lcdConfig
  1193 ;;		_lcdSetPosition
  1194 ;; This function is called by:
  1195 ;;		_main
  1196 ;; This function uses a non-reentrant model
  1197 ;;
  1198                           
  1199  0481                     _lcdInit:	
  1200                           ;psect for function _lcdInit
  1201                           
  1202                           
  1203                           ;incstack = 0
  1204                           ; Regs used in _lcdInit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1205                           ;lcdInit@obj stored from wreg
  1206  0481  1283               	bcf	3,5	;RP0=0, select bank0
  1207  0482  1303               	bcf	3,6	;RP1=0, select bank0
  1208  0483  00A6               	movwf	lcdInit@obj
  1209  0484                     l901:
  1210                           
  1211                           ;lcd.c: 16: obj->ctrlEnable = E;
  1212  0484  0821               	movf	lcdInit@E,w
  1213  0485  00A5               	movwf	??_lcdInit
  1214  0486  0826               	movf	lcdInit@obj,w
  1215  0487  0084               	movwf	4
  1216  0488  0825               	movf	??_lcdInit,w
  1217  0489  1383               	bcf	3,7	;select IRP bank0
  1218  048A  0080               	movwf	0
  1219                           
  1220                           ;lcd.c: 17: obj->ctrlRS = RS;
  1221  048B  0822               	movf	lcdInit@RS,w
  1222  048C  00A5               	movwf	??_lcdInit
  1223  048D  0A26               	incf	lcdInit@obj,w
  1224  048E  0084               	movwf	4
  1225  048F  0825               	movf	??_lcdInit,w
  1226  0490  0080               	movwf	0
  1227  0491                     l903:
  1228                           
  1229                           ;lcd.c: 18: obj->ctrlData = data;
  1230  0491  0823               	movf	lcdInit@data,w
  1231  0492  00A5               	movwf	??_lcdInit
  1232  0493  0826               	movf	lcdInit@obj,w
  1233  0494  3E02               	addlw	2
  1234  0495  0084               	movwf	4
  1235  0496  0825               	movf	??_lcdInit,w
  1236  0497  0080               	movwf	0
  1237  0498                     l905:
  1238                           
  1239                           ;lcd.c: 19: obj->ctrlWait = wait;
  1240  0498  0824               	movf	lcdInit@wait,w
  1241  0499  00A5               	movwf	??_lcdInit
  1242  049A  0826               	movf	lcdInit@obj,w
  1243  049B  3E03               	addlw	3
  1244  049C  0084               	movwf	4
  1245  049D  0825               	movf	??_lcdInit,w
  1246  049E  0080               	movwf	0
  1247  049F                     l907:
  1248                           
  1249                           ;lcd.c: 21: lcdConfig(obj);
  1250  049F  0826               	movf	lcdInit@obj,w
  1251  04A0  120A  118A  24AF  120A  118A  	fcall	_lcdConfig
  1252  04A5                     l909:
  1253                           
  1254                           ;lcd.c: 22: lcdSetPosition(obj, 0);
  1255  04A5  01FC               	clrf	lcdSetPosition@position
  1256  04A6  1283               	bcf	3,5	;RP0=0, select bank0
  1257  04A7  1303               	bcf	3,6	;RP1=0, select bank0
  1258  04A8  0826               	movf	lcdInit@obj,w
  1259  04A9  120A  118A  2439  120A  118A  	fcall	_lcdSetPosition
  1260  04AE                     l102:
  1261  04AE  0008               	return
  1262  04AF                     __end_of_lcdInit:
  1263                           
  1264                           	psect	text3
  1265  0439                     __ptext3:	
  1266 ;; *************** function _lcdSetPosition *****************
  1267 ;; Defined at:
  1268 ;;		line 65 in file "lcd.c"
  1269 ;; Parameters:    Size  Location     Type
  1270 ;;  obj             1    wreg     const PTR const struct .
  1271 ;;		 -> main@objLcd(4), 
  1272 ;;  position        1   12[COMMON] unsigned char 
  1273 ;; Auto vars:     Size  Location     Type
  1274 ;;  obj             1    0[BANK0 ] const PTR const struct .
  1275 ;;		 -> main@objLcd(4), 
  1276 ;; Return value:  Size  Location     Type
  1277 ;;                  1    wreg      void 
  1278 ;; Registers used:
  1279 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1280 ;; Tracked objects:
  1281 ;;		On entry : 0/0
  1282 ;;		On exit  : 0/0
  1283 ;;		Unchanged: 0/0
  1284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1285 ;;      Params:         1       0       0       0       0
  1286 ;;      Locals:         0       1       0       0       0
  1287 ;;      Temps:          1       0       0       0       0
  1288 ;;      Totals:         2       1       0       0       0
  1289 ;;Total ram usage:        3 bytes
  1290 ;; Hardware stack levels used: 1
  1291 ;; Hardware stack levels required when called: 2
  1292 ;; This function calls:
  1293 ;;		_ctrlRs
  1294 ;;		_lcdWriteData
  1295 ;; This function is called by:
  1296 ;;		_main
  1297 ;;		_lcdInit
  1298 ;;		_lcdPutsInLine1
  1299 ;;		_lcdPutsInLine2
  1300 ;; This function uses a non-reentrant model
  1301 ;;
  1302                           
  1303  0439                     _lcdSetPosition:	
  1304                           ;psect for function _lcdSetPosition
  1305                           
  1306                           
  1307                           ;incstack = 0
  1308                           ; Regs used in _lcdSetPosition: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1309                           ;lcdSetPosition@obj stored from wreg
  1310  0439  1283               	bcf	3,5	;RP0=0, select bank0
  1311  043A  1303               	bcf	3,6	;RP1=0, select bank0
  1312  043B  00A0               	movwf	lcdSetPosition@obj
  1313  043C                     l895:
  1314                           
  1315                           ;lcd.c: 66: obj->ctrlRS(0);
  1316  043C  01F0               	clrf	ctrlRs@status
  1317  043D  0A20               	incf	lcdSetPosition@obj,w
  1318  043E  0084               	movwf	4
  1319  043F  1383               	bcf	3,7	;select IRP bank0
  1320  0440  0800               	movf	0,w
  1321  0441  120A  118A  2003  120A  118A  	fcall	fptable
  1322                           
  1323                           ;lcd.c: 67: lcdWriteData(obj, (0x80U) + position);
  1324  0446  087C               	movf	lcdSetPosition@position,w
  1325  0447  3E80               	addlw	128
  1326  0448  00FD               	movwf	??_lcdSetPosition
  1327  0449  087D               	movf	??_lcdSetPosition,w
  1328  044A  00F8               	movwf	lcdWriteData@data
  1329  044B  1283               	bcf	3,5	;RP0=0, select bank0
  1330  044C  1303               	bcf	3,6	;RP1=0, select bank0
  1331  044D  0820               	movf	lcdSetPosition@obj,w
  1332  044E  120A  118A  2588  120A  118A  	fcall	_lcdWriteData
  1333  0453                     l111:
  1334  0453  0008               	return
  1335  0454                     __end_of_lcdSetPosition:
  1336                           
  1337                           	psect	text4
  1338  04AF                     __ptext4:	
  1339 ;; *************** function _lcdConfig *****************
  1340 ;; Defined at:
  1341 ;;		line 26 in file "lcd.c"
  1342 ;; Parameters:    Size  Location     Type
  1343 ;;  obj             1    wreg     const PTR const struct .
  1344 ;;		 -> main@objLcd(4), 
  1345 ;; Auto vars:     Size  Location     Type
  1346 ;;  obj             1   13[COMMON] const PTR const struct .
  1347 ;;		 -> main@objLcd(4), 
  1348 ;; Return value:  Size  Location     Type
  1349 ;;                  1    wreg      void 
  1350 ;; Registers used:
  1351 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1352 ;; Tracked objects:
  1353 ;;		On entry : 0/0
  1354 ;;		On exit  : 0/0
  1355 ;;		Unchanged: 0/0
  1356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1357 ;;      Params:         0       0       0       0       0
  1358 ;;      Locals:         1       0       0       0       0
  1359 ;;      Temps:          1       0       0       0       0
  1360 ;;      Totals:         2       0       0       0       0
  1361 ;;Total ram usage:        2 bytes
  1362 ;; Hardware stack levels used: 1
  1363 ;; Hardware stack levels required when called: 2
  1364 ;; This function calls:
  1365 ;;		_lcdWriteRegister
  1366 ;; This function is called by:
  1367 ;;		_lcdInit
  1368 ;; This function uses a non-reentrant model
  1369 ;;
  1370                           
  1371  04AF                     _lcdConfig:	
  1372                           ;psect for function _lcdConfig
  1373                           
  1374                           
  1375                           ;incstack = 0
  1376                           ; Regs used in _lcdConfig: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1377                           ;lcdConfig@obj stored from wreg
  1378  04AF  00FD               	movwf	lcdConfig@obj
  1379  04B0                     l899:
  1380                           
  1381                           ;lcd.c: 27: lcdWriteRegister(obj, (1));
  1382  04B0  01F8               	clrf	lcdWriteRegister@regAddr
  1383  04B1  0AF8               	incf	lcdWriteRegister@regAddr,f
  1384  04B2  087D               	movf	lcdConfig@obj,w
  1385  04B3  120A  118A  263F  120A  118A  	fcall	_lcdWriteRegister
  1386                           
  1387                           ;lcd.c: 28: lcdWriteRegister(obj, (2));
  1388  04B8  3002               	movlw	2
  1389  04B9  00FC               	movwf	??_lcdConfig
  1390  04BA  087C               	movf	??_lcdConfig,w
  1391  04BB  00F8               	movwf	lcdWriteRegister@regAddr
  1392  04BC  087D               	movf	lcdConfig@obj,w
  1393  04BD  120A  118A  263F  120A  118A  	fcall	_lcdWriteRegister
  1394                           
  1395                           ;lcd.c: 32: lcdWriteRegister(obj, ((0x1U << (5U)) & 0xff) | ((0x1U << (3U)) & 0xff));
  1396  04C2  3028               	movlw	40
  1397  04C3  00FC               	movwf	??_lcdConfig
  1398  04C4  087C               	movf	??_lcdConfig,w
  1399  04C5  00F8               	movwf	lcdWriteRegister@regAddr
  1400  04C6  087D               	movf	lcdConfig@obj,w
  1401  04C7  120A  118A  263F  120A  118A  	fcall	_lcdWriteRegister
  1402                           
  1403                           ;lcd.c: 34: lcdWriteRegister(obj, ((0x1U << (3U)) & 0xff) | ((0x1U << (2U)) & 0xff));
  1404  04CC  300C               	movlw	12
  1405  04CD  00FC               	movwf	??_lcdConfig
  1406  04CE  087C               	movf	??_lcdConfig,w
  1407  04CF  00F8               	movwf	lcdWriteRegister@regAddr
  1408  04D0  087D               	movf	lcdConfig@obj,w
  1409  04D1  120A  118A  263F  120A  118A  	fcall	_lcdWriteRegister
  1410                           
  1411                           ;lcd.c: 35: lcdWriteRegister(obj, ((0x1U << (2U)) & 0xff) | ((0x1U << (1U)) & 0xff));
  1412  04D6  3006               	movlw	6
  1413  04D7  00FC               	movwf	??_lcdConfig
  1414  04D8  087C               	movf	??_lcdConfig,w
  1415  04D9  00F8               	movwf	lcdWriteRegister@regAddr
  1416  04DA  087D               	movf	lcdConfig@obj,w
  1417  04DB  120A  118A  263F  120A  118A  	fcall	_lcdWriteRegister
  1418  04E0                     l105:
  1419  04E0  0008               	return
  1420  04E1                     __end_of_lcdConfig:
  1421                           
  1422                           	psect	text5
  1423  04E1                     __ptext5:	
  1424 ;; *************** function _lcdCreateCustomCharacter *****************
  1425 ;; Defined at:
  1426 ;;		line 133 in file "lcd.c"
  1427 ;; Parameters:    Size  Location     Type
  1428 ;;  obj             1    wreg     const PTR const struct .
  1429 ;;		 -> main@objLcd(4), 
  1430 ;;  Pattern         1    1[BANK0 ] PTR unsigned char 
  1431 ;;		 -> main@Pattern3(8), main@Pattern1(8), 
  1432 ;;  Location        1    2[BANK0 ] const unsigned char 
  1433 ;; Auto vars:     Size  Location     Type
  1434 ;;  obj             1    5[BANK0 ] const PTR const struct .
  1435 ;;		 -> main@objLcd(4), 
  1436 ;;  i               2    6[BANK0 ] int 
  1437 ;; Return value:  Size  Location     Type
  1438 ;;                  1    wreg      void 
  1439 ;; Registers used:
  1440 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1441 ;; Tracked objects:
  1442 ;;		On entry : 0/0
  1443 ;;		On exit  : 0/0
  1444 ;;		Unchanged: 0/0
  1445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1446 ;;      Params:         0       2       0       0       0
  1447 ;;      Locals:         0       3       0       0       0
  1448 ;;      Temps:          0       2       0       0       0
  1449 ;;      Totals:         0       7       0       0       0
  1450 ;;Total ram usage:        7 bytes
  1451 ;; Hardware stack levels used: 1
  1452 ;; Hardware stack levels required when called: 3
  1453 ;; This function calls:
  1454 ;;		_lcdPutch
  1455 ;;		_lcdWriteRegister
  1456 ;; This function is called by:
  1457 ;;		_main
  1458 ;; This function uses a non-reentrant model
  1459 ;;
  1460                           
  1461  04E1                     _lcdCreateCustomCharacter:	
  1462                           ;psect for function _lcdCreateCustomCharacter
  1463                           
  1464                           
  1465                           ;incstack = 0
  1466                           ; Regs used in _lcdCreateCustomCharacter: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+c
      +                          stack]
  1467                           ;lcdCreateCustomCharacter@obj stored from wreg
  1468  04E1  1283               	bcf	3,5	;RP0=0, select bank0
  1469  04E2  1303               	bcf	3,6	;RP1=0, select bank0
  1470  04E3  00A5               	movwf	lcdCreateCustomCharacter@obj
  1471  04E4                     l911:
  1472  04E4                     l913:
  1473                           
  1474                           ;lcd.c: 136: lcdWriteRegister(obj, (0x40U) + (Location*(8U)) );
  1475  04E4  0822               	movf	lcdCreateCustomCharacter@Location,w
  1476  04E5  00A3               	movwf	??_lcdCreateCustomCharacter
  1477  04E6  3002               	movlw	2
  1478  04E7                     u255:
  1479  04E7  1003               	clrc
  1480  04E8  0DA3               	rlf	??_lcdCreateCustomCharacter,f
  1481  04E9  3EFF               	addlw	-1
  1482  04EA  1D03               	skipz
  1483  04EB  2CE7               	goto	u255
  1484  04EC  1003               	clrc
  1485  04ED  0D23               	rlf	??_lcdCreateCustomCharacter,w
  1486  04EE  3E40               	addlw	64
  1487  04EF  00A4               	movwf	??_lcdCreateCustomCharacter+1
  1488  04F0  0824               	movf	??_lcdCreateCustomCharacter+1,w
  1489  04F1  00F8               	movwf	lcdWriteRegister@regAddr
  1490  04F2  0825               	movf	lcdCreateCustomCharacter@obj,w
  1491  04F3  120A  118A  263F  120A  118A  	fcall	_lcdWriteRegister
  1492  04F8                     l915:
  1493                           
  1494                           ;lcd.c: 137: for (i=0; i<8; i++)
  1495  04F8  1283               	bcf	3,5	;RP0=0, select bank0
  1496  04F9  1303               	bcf	3,6	;RP1=0, select bank0
  1497  04FA  01A6               	clrf	lcdCreateCustomCharacter@i
  1498  04FB  01A7               	clrf	lcdCreateCustomCharacter@i+1
  1499  04FC                     l921:
  1500                           
  1501                           ;lcd.c: 138: lcdPutch(obj, Pattern [ i ] );
  1502  04FC  1283               	bcf	3,5	;RP0=0, select bank0
  1503  04FD  1303               	bcf	3,6	;RP1=0, select bank0
  1504  04FE  0826               	movf	lcdCreateCustomCharacter@i,w
  1505  04FF  0721               	addwf	lcdCreateCustomCharacter@Pattern,w
  1506  0500  00A3               	movwf	??_lcdCreateCustomCharacter
  1507  0501  0823               	movf	??_lcdCreateCustomCharacter,w
  1508  0502  0084               	movwf	4
  1509  0503  1383               	bcf	3,7	;select IRP bank0
  1510  0504  0800               	movf	0,w
  1511  0505  00A4               	movwf	??_lcdCreateCustomCharacter+1
  1512  0506  0824               	movf	??_lcdCreateCustomCharacter+1,w
  1513  0507  00FC               	movwf	lcdPutch@c
  1514  0508  0825               	movf	lcdCreateCustomCharacter@obj,w
  1515  0509  120A  118A  241E  120A  118A  	fcall	_lcdPutch
  1516  050E                     l923:
  1517  050E  3001               	movlw	1
  1518  050F  1283               	bcf	3,5	;RP0=0, select bank0
  1519  0510  1303               	bcf	3,6	;RP1=0, select bank0
  1520  0511  07A6               	addwf	lcdCreateCustomCharacter@i,f
  1521  0512  1803               	skipnc
  1522  0513  0AA7               	incf	lcdCreateCustomCharacter@i+1,f
  1523  0514  3000               	movlw	0
  1524  0515  07A7               	addwf	lcdCreateCustomCharacter@i+1,f
  1525  0516                     l925:
  1526  0516  0827               	movf	lcdCreateCustomCharacter@i+1,w
  1527  0517  3A80               	xorlw	128
  1528  0518  00FF               	movwf	btemp+1
  1529  0519  3080               	movlw	128
  1530  051A  027F               	subwf	btemp+1,w
  1531  051B  1D03               	skipz
  1532  051C  2D1F               	goto	u265
  1533  051D  3008               	movlw	8
  1534  051E  0226               	subwf	lcdCreateCustomCharacter@i,w
  1535  051F                     u265:
  1536  051F  1C03               	skipc
  1537  0520  2D22               	goto	u261
  1538  0521  2D23               	goto	u260
  1539  0522                     u261:
  1540  0522  2CFC               	goto	l921
  1541  0523                     u260:
  1542  0523                     l143:
  1543  0523  0008               	return
  1544  0524                     __end_of_lcdCreateCustomCharacter:
  1545                           
  1546                           	psect	text6
  1547  063F                     __ptext6:	
  1548 ;; *************** function _lcdWriteRegister *****************
  1549 ;; Defined at:
  1550 ;;		line 40 in file "lcd.c"
  1551 ;; Parameters:    Size  Location     Type
  1552 ;;  obj             1    wreg     const PTR const struct .
  1553 ;;		 -> main@objLcd(4), 
  1554 ;;  regAddr         1    8[COMMON] unsigned char 
  1555 ;; Auto vars:     Size  Location     Type
  1556 ;;  obj             1   11[COMMON] const PTR const struct .
  1557 ;;		 -> main@objLcd(4), 
  1558 ;; Return value:  Size  Location     Type
  1559 ;;                  1    wreg      void 
  1560 ;; Registers used:
  1561 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1562 ;; Tracked objects:
  1563 ;;		On entry : 0/0
  1564 ;;		On exit  : 0/0
  1565 ;;		Unchanged: 0/0
  1566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1567 ;;      Params:         1       0       0       0       0
  1568 ;;      Locals:         1       0       0       0       0
  1569 ;;      Temps:          2       0       0       0       0
  1570 ;;      Totals:         4       0       0       0       0
  1571 ;;Total ram usage:        4 bytes
  1572 ;; Hardware stack levels used: 1
  1573 ;; Hardware stack levels required when called: 1
  1574 ;; This function calls:
  1575 ;;		_ctrlData
  1576 ;;		_ctrlEn
  1577 ;;		_ctrlRs
  1578 ;;		_delay_ms
  1579 ;; This function is called by:
  1580 ;;		_lcdConfig
  1581 ;;		_lcdCreateCustomCharacter
  1582 ;; This function uses a non-reentrant model
  1583 ;;
  1584                           
  1585  063F                     _lcdWriteRegister:	
  1586                           ;psect for function _lcdWriteRegister
  1587                           
  1588                           
  1589                           ;incstack = 0
  1590                           ; Regs used in _lcdWriteRegister: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1591                           ;lcdWriteRegister@obj stored from wreg
  1592  063F  00FB               	movwf	lcdWriteRegister@obj
  1593  0640                     l891:
  1594                           
  1595                           ;lcd.c: 48: obj->ctrlRS(0);
  1596  0640  01F0               	clrf	ctrlRs@status
  1597  0641  0A7B               	incf	lcdWriteRegister@obj,w
  1598  0642  0084               	movwf	4
  1599  0643  1383               	bcf	3,7	;select IRP bank0
  1600  0644  0800               	movf	0,w
  1601  0645  120A  118A  2003  120A  118A  	fcall	fptable
  1602                           
  1603                           ;lcd.c: 49: obj->ctrlEnable(1);
  1604  064A  01F0               	clrf	ctrlEn@status
  1605  064B  0AF0               	incf	ctrlEn@status,f
  1606  064C  087B               	movf	lcdWriteRegister@obj,w
  1607  064D  0084               	movwf	4
  1608  064E  1383               	bcf	3,7	;select IRP bank0
  1609  064F  0800               	movf	0,w
  1610  0650  120A  118A  2003  120A  118A  	fcall	fptable
  1611                           
  1612                           ;lcd.c: 50: obj->ctrlData( 0x0F );
  1613  0655  300F               	movlw	15
  1614  0656  00F9               	movwf	??_lcdWriteRegister
  1615  0657  0879               	movf	??_lcdWriteRegister,w
  1616  0658  00F0               	movwf	ctrlData@Data
  1617  0659  087B               	movf	lcdWriteRegister@obj,w
  1618  065A  3E02               	addlw	2
  1619  065B  0084               	movwf	4
  1620  065C  1383               	bcf	3,7	;select IRP bank0
  1621  065D  0800               	movf	0,w
  1622  065E  120A  118A  2003  120A  118A  	fcall	fptable
  1623                           
  1624                           ;lcd.c: 51: obj->ctrlData( regAddr & 0xF0 );
  1625  0663  0878               	movf	lcdWriteRegister@regAddr,w
  1626  0664  39F0               	andlw	240
  1627  0665  00F9               	movwf	??_lcdWriteRegister
  1628  0666  0879               	movf	??_lcdWriteRegister,w
  1629  0667  00F0               	movwf	ctrlData@Data
  1630  0668  087B               	movf	lcdWriteRegister@obj,w
  1631  0669  3E02               	addlw	2
  1632  066A  0084               	movwf	4
  1633  066B  1383               	bcf	3,7	;select IRP bank0
  1634  066C  0800               	movf	0,w
  1635  066D  120A  118A  2003  120A  118A  	fcall	fptable
  1636                           
  1637                           ;lcd.c: 52: obj->ctrlWait((2));
  1638  0672  3000               	movlw	0
  1639  0673  00F3               	movwf	delay_ms@milliseconds+3
  1640  0674  3000               	movlw	0
  1641  0675  00F2               	movwf	delay_ms@milliseconds+2
  1642  0676  3000               	movlw	0
  1643  0677  00F1               	movwf	delay_ms@milliseconds+1
  1644  0678  3002               	movlw	2
  1645  0679  00F0               	movwf	delay_ms@milliseconds
  1646  067A  087B               	movf	lcdWriteRegister@obj,w
  1647  067B  3E03               	addlw	3
  1648  067C  0084               	movwf	4
  1649  067D  1383               	bcf	3,7	;select IRP bank0
  1650  067E  0800               	movf	0,w
  1651  067F  120A  118A  2003  120A  118A  	fcall	fptable
  1652                           
  1653                           ;lcd.c: 53: obj->ctrlEnable(0);
  1654  0684  01F0               	clrf	ctrlEn@status
  1655  0685  087B               	movf	lcdWriteRegister@obj,w
  1656  0686  0084               	movwf	4
  1657  0687  1383               	bcf	3,7	;select IRP bank0
  1658  0688  0800               	movf	0,w
  1659  0689  120A  118A  2003  120A  118A  	fcall	fptable
  1660                           
  1661                           ;lcd.c: 54: obj->ctrlWait((2));
  1662  068E  3000               	movlw	0
  1663  068F  00F3               	movwf	delay_ms@milliseconds+3
  1664  0690  3000               	movlw	0
  1665  0691  00F2               	movwf	delay_ms@milliseconds+2
  1666  0692  3000               	movlw	0
  1667  0693  00F1               	movwf	delay_ms@milliseconds+1
  1668  0694  3002               	movlw	2
  1669  0695  00F0               	movwf	delay_ms@milliseconds
  1670  0696  087B               	movf	lcdWriteRegister@obj,w
  1671  0697  3E03               	addlw	3
  1672  0698  0084               	movwf	4
  1673  0699  1383               	bcf	3,7	;select IRP bank0
  1674  069A  0800               	movf	0,w
  1675  069B  120A  118A  2003  120A  118A  	fcall	fptable
  1676                           
  1677                           ;lcd.c: 55: obj->ctrlEnable(1);
  1678  06A0  01F0               	clrf	ctrlEn@status
  1679  06A1  0AF0               	incf	ctrlEn@status,f
  1680  06A2  087B               	movf	lcdWriteRegister@obj,w
  1681  06A3  0084               	movwf	4
  1682  06A4  1383               	bcf	3,7	;select IRP bank0
  1683  06A5  0800               	movf	0,w
  1684  06A6  120A  118A  2003  120A  118A  	fcall	fptable
  1685                           
  1686                           ;lcd.c: 56: obj->ctrlData( 0x0F );
  1687  06AB  300F               	movlw	15
  1688  06AC  00F9               	movwf	??_lcdWriteRegister
  1689  06AD  0879               	movf	??_lcdWriteRegister,w
  1690  06AE  00F0               	movwf	ctrlData@Data
  1691  06AF  087B               	movf	lcdWriteRegister@obj,w
  1692  06B0  3E02               	addlw	2
  1693  06B1  0084               	movwf	4
  1694  06B2  1383               	bcf	3,7	;select IRP bank0
  1695  06B3  0800               	movf	0,w
  1696  06B4  120A  118A  2003  120A  118A  	fcall	fptable
  1697                           
  1698                           ;lcd.c: 57: obj->ctrlData( (regAddr<<4) & 0xF0 );
  1699  06B9  0878               	movf	lcdWriteRegister@regAddr,w
  1700  06BA  00F9               	movwf	??_lcdWriteRegister
  1701  06BB  3003               	movlw	3
  1702  06BC                     u235:
  1703  06BC  1003               	clrc
  1704  06BD  0DF9               	rlf	??_lcdWriteRegister,f
  1705  06BE  3EFF               	addlw	-1
  1706  06BF  1D03               	skipz
  1707  06C0  2EBC               	goto	u235
  1708  06C1  1003               	clrc
  1709  06C2  0D79               	rlf	??_lcdWriteRegister,w
  1710  06C3  39F0               	andlw	240
  1711  06C4  00FA               	movwf	??_lcdWriteRegister+1
  1712  06C5  087A               	movf	??_lcdWriteRegister+1,w
  1713  06C6  00F0               	movwf	ctrlData@Data
  1714  06C7  087B               	movf	lcdWriteRegister@obj,w
  1715  06C8  3E02               	addlw	2
  1716  06C9  0084               	movwf	4
  1717  06CA  1383               	bcf	3,7	;select IRP bank0
  1718  06CB  0800               	movf	0,w
  1719  06CC  120A  118A  2003  120A  118A  	fcall	fptable
  1720                           
  1721                           ;lcd.c: 58: obj->ctrlWait((2));
  1722  06D1  3000               	movlw	0
  1723  06D2  00F3               	movwf	delay_ms@milliseconds+3
  1724  06D3  3000               	movlw	0
  1725  06D4  00F2               	movwf	delay_ms@milliseconds+2
  1726  06D5  3000               	movlw	0
  1727  06D6  00F1               	movwf	delay_ms@milliseconds+1
  1728  06D7  3002               	movlw	2
  1729  06D8  00F0               	movwf	delay_ms@milliseconds
  1730  06D9  087B               	movf	lcdWriteRegister@obj,w
  1731  06DA  3E03               	addlw	3
  1732  06DB  0084               	movwf	4
  1733  06DC  1383               	bcf	3,7	;select IRP bank0
  1734  06DD  0800               	movf	0,w
  1735  06DE  120A  118A  2003  120A  118A  	fcall	fptable
  1736                           
  1737                           ;lcd.c: 59: obj->ctrlEnable(0);
  1738  06E3  01F0               	clrf	ctrlEn@status
  1739  06E4  087B               	movf	lcdWriteRegister@obj,w
  1740  06E5  0084               	movwf	4
  1741  06E6  1383               	bcf	3,7	;select IRP bank0
  1742  06E7  0800               	movf	0,w
  1743  06E8  120A  118A  2003  120A  118A  	fcall	fptable
  1744                           
  1745                           ;lcd.c: 60: obj->ctrlWait((2));
  1746  06ED  3000               	movlw	0
  1747  06EE  00F3               	movwf	delay_ms@milliseconds+3
  1748  06EF  3000               	movlw	0
  1749  06F0  00F2               	movwf	delay_ms@milliseconds+2
  1750  06F1  3000               	movlw	0
  1751  06F2  00F1               	movwf	delay_ms@milliseconds+1
  1752  06F3  3002               	movlw	2
  1753  06F4  00F0               	movwf	delay_ms@milliseconds
  1754  06F5  087B               	movf	lcdWriteRegister@obj,w
  1755  06F6  3E03               	addlw	3
  1756  06F7  0084               	movwf	4
  1757  06F8  1383               	bcf	3,7	;select IRP bank0
  1758  06F9  0800               	movf	0,w
  1759  06FA  120A  118A  2003  120A  118A  	fcall	fptable
  1760  06FF                     l108:
  1761  06FF  0008               	return
  1762  0700                     __end_of_lcdWriteRegister:
  1763                           
  1764                           	psect	text7
  1765  041E                     __ptext7:	
  1766 ;; *************** function _lcdPutch *****************
  1767 ;; Defined at:
  1768 ;;		line 129 in file "lcd.c"
  1769 ;; Parameters:    Size  Location     Type
  1770 ;;  obj             1    wreg     const PTR const struct .
  1771 ;;		 -> main@objLcd(4), 
  1772 ;;  c               1   12[COMMON] unsigned char 
  1773 ;; Auto vars:     Size  Location     Type
  1774 ;;  obj             1    0[BANK0 ] const PTR const struct .
  1775 ;;		 -> main@objLcd(4), 
  1776 ;; Return value:  Size  Location     Type
  1777 ;;                  1    wreg      void 
  1778 ;; Registers used:
  1779 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1780 ;; Tracked objects:
  1781 ;;		On entry : 0/0
  1782 ;;		On exit  : 0/0
  1783 ;;		Unchanged: 0/0
  1784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1785 ;;      Params:         1       0       0       0       0
  1786 ;;      Locals:         0       1       0       0       0
  1787 ;;      Temps:          1       0       0       0       0
  1788 ;;      Totals:         2       1       0       0       0
  1789 ;;Total ram usage:        3 bytes
  1790 ;; Hardware stack levels used: 1
  1791 ;; Hardware stack levels required when called: 2
  1792 ;; This function calls:
  1793 ;;		_ctrlRs
  1794 ;;		_lcdWriteData
  1795 ;; This function is called by:
  1796 ;;		_main
  1797 ;;		_lcdCreateCustomCharacter
  1798 ;; This function uses a non-reentrant model
  1799 ;;
  1800                           
  1801  041E                     _lcdPutch:	
  1802                           ;psect for function _lcdPutch
  1803                           
  1804                           
  1805                           ;incstack = 0
  1806                           ; Regs used in _lcdPutch: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1807                           ;lcdPutch@obj stored from wreg
  1808  041E  1283               	bcf	3,5	;RP0=0, select bank0
  1809  041F  1303               	bcf	3,6	;RP1=0, select bank0
  1810  0420  00A0               	movwf	lcdPutch@obj
  1811  0421                     l897:
  1812                           
  1813                           ;lcd.c: 130: obj->ctrlRS(1);
  1814  0421  01F0               	clrf	ctrlRs@status
  1815  0422  0AF0               	incf	ctrlRs@status,f
  1816  0423  0A20               	incf	lcdPutch@obj,w
  1817  0424  0084               	movwf	4
  1818  0425  1383               	bcf	3,7	;select IRP bank0
  1819  0426  0800               	movf	0,w
  1820  0427  120A  118A  2003  120A  118A  	fcall	fptable
  1821                           
  1822                           ;lcd.c: 131: lcdWriteData(obj, c);
  1823  042C  087C               	movf	lcdPutch@c,w
  1824  042D  00FD               	movwf	??_lcdPutch
  1825  042E  087D               	movf	??_lcdPutch,w
  1826  042F  00F8               	movwf	lcdWriteData@data
  1827  0430  1283               	bcf	3,5	;RP0=0, select bank0
  1828  0431  1303               	bcf	3,6	;RP1=0, select bank0
  1829  0432  0820               	movf	lcdPutch@obj,w
  1830  0433  120A  118A  2588  120A  118A  	fcall	_lcdWriteData
  1831  0438                     l138:
  1832  0438  0008               	return
  1833  0439                     __end_of_lcdPutch:
  1834                           
  1835                           	psect	text8
  1836  0588                     __ptext8:	
  1837 ;; *************** function _lcdWriteData *****************
  1838 ;; Defined at:
  1839 ;;		line 69 in file "lcd.c"
  1840 ;; Parameters:    Size  Location     Type
  1841 ;;  obj             1    wreg     const PTR const struct .
  1842 ;;		 -> main@objLcd(4), 
  1843 ;;  data            1    8[COMMON] unsigned char 
  1844 ;; Auto vars:     Size  Location     Type
  1845 ;;  obj             1   11[COMMON] const PTR const struct .
  1846 ;;		 -> main@objLcd(4), 
  1847 ;; Return value:  Size  Location     Type
  1848 ;;                  1    wreg      void 
  1849 ;; Registers used:
  1850 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1851 ;; Tracked objects:
  1852 ;;		On entry : 0/0
  1853 ;;		On exit  : 0/0
  1854 ;;		Unchanged: 0/0
  1855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1856 ;;      Params:         1       0       0       0       0
  1857 ;;      Locals:         1       0       0       0       0
  1858 ;;      Temps:          2       0       0       0       0
  1859 ;;      Totals:         4       0       0       0       0
  1860 ;;Total ram usage:        4 bytes
  1861 ;; Hardware stack levels used: 1
  1862 ;; Hardware stack levels required when called: 1
  1863 ;; This function calls:
  1864 ;;		_ctrlData
  1865 ;;		_ctrlEn
  1866 ;;		_delay_ms
  1867 ;; This function is called by:
  1868 ;;		_lcdSetPosition
  1869 ;;		_lcdPutsInLine1
  1870 ;;		_lcdPutch
  1871 ;;		_lcdPutsInLine2
  1872 ;; This function uses a non-reentrant model
  1873 ;;
  1874                           
  1875  0588                     _lcdWriteData:	
  1876                           ;psect for function _lcdWriteData
  1877                           
  1878                           
  1879                           ;incstack = 0
  1880                           ; Regs used in _lcdWriteData: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1881                           ;lcdWriteData@obj stored from wreg
  1882  0588  00FB               	movwf	lcdWriteData@obj
  1883  0589                     l893:
  1884                           
  1885                           ;lcd.c: 77: obj->ctrlEnable(1);
  1886  0589  01F0               	clrf	ctrlEn@status
  1887  058A  0AF0               	incf	ctrlEn@status,f
  1888  058B  087B               	movf	lcdWriteData@obj,w
  1889  058C  0084               	movwf	4
  1890  058D  1383               	bcf	3,7	;select IRP bank0
  1891  058E  0800               	movf	0,w
  1892  058F  120A  118A  2003  120A  118A  	fcall	fptable
  1893                           
  1894                           ;lcd.c: 78: obj->ctrlData( 0x0F );
  1895  0594  300F               	movlw	15
  1896  0595  00F9               	movwf	??_lcdWriteData
  1897  0596  0879               	movf	??_lcdWriteData,w
  1898  0597  00F0               	movwf	ctrlData@Data
  1899  0598  087B               	movf	lcdWriteData@obj,w
  1900  0599  3E02               	addlw	2
  1901  059A  0084               	movwf	4
  1902  059B  1383               	bcf	3,7	;select IRP bank0
  1903  059C  0800               	movf	0,w
  1904  059D  120A  118A  2003  120A  118A  	fcall	fptable
  1905                           
  1906                           ;lcd.c: 79: obj->ctrlData( data & 0xF0 );
  1907  05A2  0878               	movf	lcdWriteData@data,w
  1908  05A3  39F0               	andlw	240
  1909  05A4  00F9               	movwf	??_lcdWriteData
  1910  05A5  0879               	movf	??_lcdWriteData,w
  1911  05A6  00F0               	movwf	ctrlData@Data
  1912  05A7  087B               	movf	lcdWriteData@obj,w
  1913  05A8  3E02               	addlw	2
  1914  05A9  0084               	movwf	4
  1915  05AA  1383               	bcf	3,7	;select IRP bank0
  1916  05AB  0800               	movf	0,w
  1917  05AC  120A  118A  2003  120A  118A  	fcall	fptable
  1918                           
  1919                           ;lcd.c: 80: obj->ctrlWait((2));
  1920  05B1  3000               	movlw	0
  1921  05B2  00F3               	movwf	delay_ms@milliseconds+3
  1922  05B3  3000               	movlw	0
  1923  05B4  00F2               	movwf	delay_ms@milliseconds+2
  1924  05B5  3000               	movlw	0
  1925  05B6  00F1               	movwf	delay_ms@milliseconds+1
  1926  05B7  3002               	movlw	2
  1927  05B8  00F0               	movwf	delay_ms@milliseconds
  1928  05B9  087B               	movf	lcdWriteData@obj,w
  1929  05BA  3E03               	addlw	3
  1930  05BB  0084               	movwf	4
  1931  05BC  1383               	bcf	3,7	;select IRP bank0
  1932  05BD  0800               	movf	0,w
  1933  05BE  120A  118A  2003  120A  118A  	fcall	fptable
  1934                           
  1935                           ;lcd.c: 81: obj->ctrlEnable(0);
  1936  05C3  01F0               	clrf	ctrlEn@status
  1937  05C4  087B               	movf	lcdWriteData@obj,w
  1938  05C5  0084               	movwf	4
  1939  05C6  1383               	bcf	3,7	;select IRP bank0
  1940  05C7  0800               	movf	0,w
  1941  05C8  120A  118A  2003  120A  118A  	fcall	fptable
  1942                           
  1943                           ;lcd.c: 82: obj->ctrlWait((2));
  1944  05CD  3000               	movlw	0
  1945  05CE  00F3               	movwf	delay_ms@milliseconds+3
  1946  05CF  3000               	movlw	0
  1947  05D0  00F2               	movwf	delay_ms@milliseconds+2
  1948  05D1  3000               	movlw	0
  1949  05D2  00F1               	movwf	delay_ms@milliseconds+1
  1950  05D3  3002               	movlw	2
  1951  05D4  00F0               	movwf	delay_ms@milliseconds
  1952  05D5  087B               	movf	lcdWriteData@obj,w
  1953  05D6  3E03               	addlw	3
  1954  05D7  0084               	movwf	4
  1955  05D8  1383               	bcf	3,7	;select IRP bank0
  1956  05D9  0800               	movf	0,w
  1957  05DA  120A  118A  2003  120A  118A  	fcall	fptable
  1958                           
  1959                           ;lcd.c: 83: obj->ctrlEnable(1);
  1960  05DF  01F0               	clrf	ctrlEn@status
  1961  05E0  0AF0               	incf	ctrlEn@status,f
  1962  05E1  087B               	movf	lcdWriteData@obj,w
  1963  05E2  0084               	movwf	4
  1964  05E3  1383               	bcf	3,7	;select IRP bank0
  1965  05E4  0800               	movf	0,w
  1966  05E5  120A  118A  2003  120A  118A  	fcall	fptable
  1967                           
  1968                           ;lcd.c: 84: obj->ctrlData( 0x0F );
  1969  05EA  300F               	movlw	15
  1970  05EB  00F9               	movwf	??_lcdWriteData
  1971  05EC  0879               	movf	??_lcdWriteData,w
  1972  05ED  00F0               	movwf	ctrlData@Data
  1973  05EE  087B               	movf	lcdWriteData@obj,w
  1974  05EF  3E02               	addlw	2
  1975  05F0  0084               	movwf	4
  1976  05F1  1383               	bcf	3,7	;select IRP bank0
  1977  05F2  0800               	movf	0,w
  1978  05F3  120A  118A  2003  120A  118A  	fcall	fptable
  1979                           
  1980                           ;lcd.c: 85: obj->ctrlData( (data<<4) & 0xF0 );
  1981  05F8  0878               	movf	lcdWriteData@data,w
  1982  05F9  00F9               	movwf	??_lcdWriteData
  1983  05FA  3003               	movlw	3
  1984  05FB                     u245:
  1985  05FB  1003               	clrc
  1986  05FC  0DF9               	rlf	??_lcdWriteData,f
  1987  05FD  3EFF               	addlw	-1
  1988  05FE  1D03               	skipz
  1989  05FF  2DFB               	goto	u245
  1990  0600  1003               	clrc
  1991  0601  0D79               	rlf	??_lcdWriteData,w
  1992  0602  39F0               	andlw	240
  1993  0603  00FA               	movwf	??_lcdWriteData+1
  1994  0604  087A               	movf	??_lcdWriteData+1,w
  1995  0605  00F0               	movwf	ctrlData@Data
  1996  0606  087B               	movf	lcdWriteData@obj,w
  1997  0607  3E02               	addlw	2
  1998  0608  0084               	movwf	4
  1999  0609  1383               	bcf	3,7	;select IRP bank0
  2000  060A  0800               	movf	0,w
  2001  060B  120A  118A  2003  120A  118A  	fcall	fptable
  2002                           
  2003                           ;lcd.c: 86: obj->ctrlWait((2));
  2004  0610  3000               	movlw	0
  2005  0611  00F3               	movwf	delay_ms@milliseconds+3
  2006  0612  3000               	movlw	0
  2007  0613  00F2               	movwf	delay_ms@milliseconds+2
  2008  0614  3000               	movlw	0
  2009  0615  00F1               	movwf	delay_ms@milliseconds+1
  2010  0616  3002               	movlw	2
  2011  0617  00F0               	movwf	delay_ms@milliseconds
  2012  0618  087B               	movf	lcdWriteData@obj,w
  2013  0619  3E03               	addlw	3
  2014  061A  0084               	movwf	4
  2015  061B  1383               	bcf	3,7	;select IRP bank0
  2016  061C  0800               	movf	0,w
  2017  061D  120A  118A  2003  120A  118A  	fcall	fptable
  2018                           
  2019                           ;lcd.c: 87: obj->ctrlEnable(0);
  2020  0622  01F0               	clrf	ctrlEn@status
  2021  0623  087B               	movf	lcdWriteData@obj,w
  2022  0624  0084               	movwf	4
  2023  0625  1383               	bcf	3,7	;select IRP bank0
  2024  0626  0800               	movf	0,w
  2025  0627  120A  118A  2003  120A  118A  	fcall	fptable
  2026                           
  2027                           ;lcd.c: 88: obj->ctrlWait((2));
  2028  062C  3000               	movlw	0
  2029  062D  00F3               	movwf	delay_ms@milliseconds+3
  2030  062E  3000               	movlw	0
  2031  062F  00F2               	movwf	delay_ms@milliseconds+2
  2032  0630  3000               	movlw	0
  2033  0631  00F1               	movwf	delay_ms@milliseconds+1
  2034  0632  3002               	movlw	2
  2035  0633  00F0               	movwf	delay_ms@milliseconds
  2036  0634  087B               	movf	lcdWriteData@obj,w
  2037  0635  3E03               	addlw	3
  2038  0636  0084               	movwf	4
  2039  0637  1383               	bcf	3,7	;select IRP bank0
  2040  0638  0800               	movf	0,w
  2041  0639  120A  118A  2003  120A  118A  	fcall	fptable
  2042  063E                     l114:
  2043  063E  0008               	return
  2044  063F                     __end_of_lcdWriteData:
  2045                           
  2046                           	psect	text9
  2047  0454                     __ptext9:	
  2048 ;; *************** function _delay_ms *****************
  2049 ;; Defined at:
  2050 ;;		line 90 in file "newmain.c"
  2051 ;; Parameters:    Size  Location     Type
  2052 ;;  milliseconds    4    0[COMMON] unsigned long 
  2053 ;; Auto vars:     Size  Location     Type
  2054 ;;		None
  2055 ;; Return value:  Size  Location     Type
  2056 ;;                  1    wreg      void 
  2057 ;; Registers used:
  2058 ;;		wreg
  2059 ;; Tracked objects:
  2060 ;;		On entry : 0/0
  2061 ;;		On exit  : 0/0
  2062 ;;		Unchanged: 0/0
  2063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2064 ;;      Params:         4       0       0       0       0
  2065 ;;      Locals:         0       0       0       0       0
  2066 ;;      Temps:          4       0       0       0       0
  2067 ;;      Totals:         8       0       0       0       0
  2068 ;;Total ram usage:        8 bytes
  2069 ;; Hardware stack levels used: 1
  2070 ;; This function calls:
  2071 ;;		Nothing
  2072 ;; This function is called by:
  2073 ;;		_main
  2074 ;;		_lcdWriteRegister
  2075 ;;		_lcdWriteData
  2076 ;; This function uses a non-reentrant model
  2077 ;;
  2078                           
  2079  0454                     _delay_ms:	
  2080                           ;psect for function _delay_ms
  2081                           
  2082  0454                     l887:	
  2083                           ;incstack = 0
  2084                           ; Regs used in _delay_ms: [wreg]
  2085                           
  2086                           
  2087                           ;newmain.c: 91: while(milliseconds > 0)
  2088  0454  2C78               	goto	l72
  2089  0455                     l889:
  2090                           
  2091                           ;newmain.c: 92: {;newmain.c: 93: _delay((unsigned long)((1)*(4000000/4000.0)));
  2092  0455  30C7               	movlw	199
  2093  0456  00F4               	movwf	??_delay_ms
  2094  0457                     u447:
  2095  0457  2C58               	nop2
  2096  0458  0BF4               	decfsz	??_delay_ms,f
  2097  0459  2C57               	goto	u447
  2098  045A  2C5B               	nop2
  2099  045B  2C5C               	nop2
  2100                           
  2101                           ;newmain.c: 94: milliseconds--;
  2102  045C  3001               	movlw	1
  2103  045D  00F4               	movwf	??_delay_ms
  2104  045E  3000               	movlw	0
  2105  045F  00F5               	movwf	??_delay_ms+1
  2106  0460  3000               	movlw	0
  2107  0461  00F6               	movwf	??_delay_ms+2
  2108  0462  3000               	movlw	0
  2109  0463  00F7               	movwf	??_delay_ms+3
  2110  0464  0874               	movf	??_delay_ms,w
  2111  0465  02F0               	subwf	delay_ms@milliseconds,f
  2112  0466  0875               	movf	??_delay_ms+1,w
  2113  0467  1C03               	skipc
  2114  0468  0F75               	incfsz	??_delay_ms+1,w
  2115  0469  2C6B               	goto	u215
  2116  046A  2C6C               	goto	u216
  2117  046B                     u215:
  2118  046B  02F1               	subwf	delay_ms@milliseconds+1,f
  2119  046C                     u216:
  2120  046C  0876               	movf	??_delay_ms+2,w
  2121  046D  1C03               	skipc
  2122  046E  0F76               	incfsz	??_delay_ms+2,w
  2123  046F  2C71               	goto	u217
  2124  0470  2C72               	goto	u218
  2125  0471                     u217:
  2126  0471  02F2               	subwf	delay_ms@milliseconds+2,f
  2127  0472                     u218:
  2128  0472  0877               	movf	??_delay_ms+3,w
  2129  0473  1C03               	skipc
  2130  0474  0F77               	incfsz	??_delay_ms+3,w
  2131  0475  2C77               	goto	u219
  2132  0476  2C78               	goto	u210
  2133  0477                     u219:
  2134  0477  02F3               	subwf	delay_ms@milliseconds+3,f
  2135  0478                     u210:
  2136  0478                     l72:
  2137  0478  0873               	movf	delay_ms@milliseconds+3,w
  2138  0479  0472               	iorwf	delay_ms@milliseconds+2,w
  2139  047A  0471               	iorwf	delay_ms@milliseconds+1,w
  2140  047B  0470               	iorwf	delay_ms@milliseconds,w
  2141  047C  1D03               	skipz
  2142  047D  2C7F               	goto	u221
  2143  047E  2C80               	goto	u220
  2144  047F                     u221:
  2145  047F  2C55               	goto	l889
  2146  0480                     u220:
  2147  0480                     l75:
  2148  0480  0008               	return
  2149  0481                     __end_of_delay_ms:
  2150                           
  2151                           	psect	text10
  2152  03DC                     __ptext10:	
  2153 ;; *************** function _ctrlEn *****************
  2154 ;; Defined at:
  2155 ;;		line 80 in file "newmain.c"
  2156 ;; Parameters:    Size  Location     Type
  2157 ;;  status          1    0[COMMON] unsigned char 
  2158 ;; Auto vars:     Size  Location     Type
  2159 ;;		None
  2160 ;; Return value:  Size  Location     Type
  2161 ;;                  1    wreg      void 
  2162 ;; Registers used:
  2163 ;;		wreg, status,0
  2164 ;; Tracked objects:
  2165 ;;		On entry : 0/0
  2166 ;;		On exit  : 0/0
  2167 ;;		Unchanged: 0/0
  2168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2169 ;;      Params:         1       0       0       0       0
  2170 ;;      Locals:         0       0       0       0       0
  2171 ;;      Temps:          0       0       0       0       0
  2172 ;;      Totals:         1       0       0       0       0
  2173 ;;Total ram usage:        1 bytes
  2174 ;; Hardware stack levels used: 1
  2175 ;; This function calls:
  2176 ;;		Nothing
  2177 ;; This function is called by:
  2178 ;;		_main
  2179 ;;		_lcdWriteRegister
  2180 ;;		_lcdWriteData
  2181 ;; This function uses a non-reentrant model
  2182 ;;
  2183                           
  2184  03DC                     _ctrlEn:	
  2185                           ;psect for function _ctrlEn
  2186                           
  2187  03DC                     l881:	
  2188                           ;incstack = 0
  2189                           ; Regs used in _ctrlEn: [wreg+status,0]
  2190                           
  2191                           
  2192                           ;newmain.c: 81: PORTDbits.RD7 = status;
  2193  03DC  0C70               	rrf	ctrlEn@status,w
  2194  03DD  1283               	bcf	3,5	;RP0=0, select bank0
  2195  03DE  1303               	bcf	3,6	;RP1=0, select bank0
  2196  03DF  1C03               	skipc
  2197  03E0  1388               	bcf	8,7	;volatile
  2198  03E1  1803               	skipnc
  2199  03E2  1788               	bsf	8,7	;volatile
  2200  03E3                     l63:
  2201  03E3  0008               	return
  2202  03E4                     __end_of_ctrlEn:
  2203                           
  2204                           	psect	text11
  2205  03CF                     __ptext11:	
  2206 ;; *************** function _ctrlData *****************
  2207 ;; Defined at:
  2208 ;;		line 86 in file "newmain.c"
  2209 ;; Parameters:    Size  Location     Type
  2210 ;;  Data            1    0[COMMON] unsigned char 
  2211 ;; Auto vars:     Size  Location     Type
  2212 ;;		None
  2213 ;; Return value:  Size  Location     Type
  2214 ;;                  1    wreg      void 
  2215 ;; Registers used:
  2216 ;;		wreg
  2217 ;; Tracked objects:
  2218 ;;		On entry : 0/0
  2219 ;;		On exit  : 0/0
  2220 ;;		Unchanged: 0/0
  2221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2222 ;;      Params:         1       0       0       0       0
  2223 ;;      Locals:         0       0       0       0       0
  2224 ;;      Temps:          0       0       0       0       0
  2225 ;;      Totals:         1       0       0       0       0
  2226 ;;Total ram usage:        1 bytes
  2227 ;; Hardware stack levels used: 1
  2228 ;; This function calls:
  2229 ;;		Nothing
  2230 ;; This function is called by:
  2231 ;;		_main
  2232 ;;		_lcdWriteRegister
  2233 ;;		_lcdWriteData
  2234 ;; This function uses a non-reentrant model
  2235 ;;
  2236                           
  2237  03CF                     _ctrlData:	
  2238                           ;psect for function _ctrlData
  2239                           
  2240  03CF                     l885:	
  2241                           ;incstack = 0
  2242                           ; Regs used in _ctrlData: [wreg]
  2243                           
  2244                           
  2245                           ;newmain.c: 87: PORTC = Data;
  2246  03CF  0870               	movf	ctrlData@Data,w
  2247  03D0  1283               	bcf	3,5	;RP0=0, select bank0
  2248  03D1  1303               	bcf	3,6	;RP1=0, select bank0
  2249  03D2  0087               	movwf	7	;volatile
  2250  03D3                     l69:
  2251  03D3  0008               	return
  2252  03D4                     __end_of_ctrlData:
  2253                           
  2254                           	psect	text12
  2255  03D4                     __ptext12:	
  2256 ;; *************** function _ctrlRs *****************
  2257 ;; Defined at:
  2258 ;;		line 83 in file "newmain.c"
  2259 ;; Parameters:    Size  Location     Type
  2260 ;;  status          1    0[COMMON] unsigned char 
  2261 ;; Auto vars:     Size  Location     Type
  2262 ;;		None
  2263 ;; Return value:  Size  Location     Type
  2264 ;;                  1    wreg      void 
  2265 ;; Registers used:
  2266 ;;		wreg, status,0
  2267 ;; Tracked objects:
  2268 ;;		On entry : 0/0
  2269 ;;		On exit  : 0/0
  2270 ;;		Unchanged: 0/0
  2271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2272 ;;      Params:         1       0       0       0       0
  2273 ;;      Locals:         0       0       0       0       0
  2274 ;;      Temps:          0       0       0       0       0
  2275 ;;      Totals:         1       0       0       0       0
  2276 ;;Total ram usage:        1 bytes
  2277 ;; Hardware stack levels used: 1
  2278 ;; This function calls:
  2279 ;;		Nothing
  2280 ;; This function is called by:
  2281 ;;		_main
  2282 ;;		_lcdWriteRegister
  2283 ;;		_lcdSetPosition
  2284 ;;		_lcdPutch
  2285 ;;		_lcdPutsInLine1
  2286 ;; This function uses a non-reentrant model
  2287 ;;
  2288                           
  2289  03D4                     _ctrlRs:	
  2290                           ;psect for function _ctrlRs
  2291                           
  2292  03D4                     l883:	
  2293                           ;incstack = 0
  2294                           ; Regs used in _ctrlRs: [wreg+status,0]
  2295                           
  2296                           
  2297                           ;newmain.c: 84: PORTDbits.RD6 = status;
  2298  03D4  0C70               	rrf	ctrlRs@status,w
  2299  03D5  1283               	bcf	3,5	;RP0=0, select bank0
  2300  03D6  1303               	bcf	3,6	;RP1=0, select bank0
  2301  03D7  1C03               	skipc
  2302  03D8  1308               	bcf	8,6	;volatile
  2303  03D9  1803               	skipnc
  2304  03DA  1708               	bsf	8,6	;volatile
  2305  03DB                     l66:
  2306  03DB  0008               	return
  2307  03DC                     __end_of_ctrlRs:
  2308  0008                     
  2309                           	psect	functab
  2310  0003                     __pfunctab:
  2311  0003                     __fptable:
  2312  0003                     fptable:
  2313  0003  00FF               	movwf	(btemp+1)& (0+127)
  2314  0004  3000               	movlw	high fptable
  2315  0005  008A               	movwf	10
  2316  0006  087F               	movf	(btemp+1)& (0+127),w
  2317  0007  0782               	addwf	2,f
  2318  0008                     fpbase:
  2319  0008  2808               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  2320  0009                     fp__ctrlRs:
  2321  0009  120A  118A  2BD4   	ljmp	_ctrlRs
  2322  000C                     fp__ctrlData:
  2323  000C  120A  118A  2BCF   	ljmp	_ctrlData
  2324  000F                     fp__ctrlEn:
  2325  000F  120A  118A  2BDC   	ljmp	_ctrlEn
  2326  0012                     fp__delay_ms:
  2327  0012  120A  118A  2C54   	ljmp	_delay_ms
  2328  0015                     __end_of__fptable:
  2329  007E                     btemp	set	126	;btemp
  2330  007E                     wtemp0	set	126
  2331                           
  2332                           	psect	idloc
  2333                           
  2334                           ;Config register IDLOC0 @ 0x2000
  2335                           ;	unspecified, using default values
  2336  2000                     	org	8192
  2337  2000  3FFF               	dw	16383
  2338                           
  2339                           ;Config register IDLOC1 @ 0x2001
  2340                           ;	unspecified, using default values
  2341  2001                     	org	8193
  2342  2001  3FFF               	dw	16383
  2343                           
  2344                           ;Config register IDLOC2 @ 0x2002
  2345                           ;	unspecified, using default values
  2346  2002                     	org	8194
  2347  2002  3FFF               	dw	16383
  2348                           
  2349                           ;Config register IDLOC3 @ 0x2003
  2350                           ;	unspecified, using default values
  2351  2003                     	org	8195
  2352  2003  3FFF               	dw	16383
  2353                           
  2354                           	psect	config
  2355                           
  2356                           ;Config register CONFIG1 @ 0x2007
  2357                           ;	Oscillator Selection bits
  2358                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  2359                           ;	Watchdog Timer Enable bit
  2360                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2361                           ;	Power-up Timer Enable bit
  2362                           ;	PWRTE = 0x1, unprogrammed default
  2363                           ;	RE3/MCLR pin function select bit
  2364                           ;	MCLRE = 0x1, unprogrammed default
  2365                           ;	Code Protection bit
  2366                           ;	CP = 0x1, unprogrammed default
  2367                           ;	Data Code Protection bit
  2368                           ;	CPD = 0x1, unprogrammed default
  2369                           ;	Brown Out Reset Selection bits
  2370                           ;	BOREN = 0x3, unprogrammed default
  2371                           ;	Internal External Switchover bit
  2372                           ;	IESO = 0x1, unprogrammed default
  2373                           ;	Fail-Safe Clock Monitor Enabled bit
  2374                           ;	FCMEN = 0x1, unprogrammed default
  2375                           ;	Low Voltage Programming Enable bit
  2376                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2377                           ;	In-Circuit Debugger Mode bit
  2378                           ;	DEBUG = 0x1, unprogrammed default
  2379  2007                     	org	8199
  2380  2007  2FF2               	dw	12274
  2381                           
  2382                           ;Config register CONFIG2 @ 0x2008
  2383                           ;	unspecified, using default values
  2384                           ;	Brown-out Reset Selection bit
  2385                           ;	BOR4V = 0x1, unprogrammed default
  2386                           ;	Flash Program Memory Self Write Enable bits
  2387                           ;	WRT = 0x3, unprogrammed default
  2388  2008                     	org	8200
  2389  2008  3FFF               	dw	16383

Data Sizes:
    Strings     15
    Constant    0
    Data        31
    BSS         42
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     50      75
    BANK1            80      0      48
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcdPuts@obj.ctrlWait	PTR FTN(unsigned long ,)void  size(1) Largest target is 0
		 -> delay_ms(), 

    lcdPuts@obj.ctrlData	PTR FTN(unsigned char ,)void  size(1) Largest target is 0
		 -> ctrlData(), 

    lcdPuts@obj.ctrlRS	PTR FTN(unsigned char ,)void  size(1) Largest target is 0
		 -> ctrlRs(), 

    lcdPuts@obj.ctrlEnable	PTR FTN(unsigned char ,)void  size(1) Largest target is 0
		 -> ctrlEn(), 

    lcdCreateCustomCharacter@obj.ctrlWait	PTR FTN(unsigned long ,)void  size(1) Largest target is 0
		 -> delay_ms(), 

    lcdCreateCustomCharacter@obj.ctrlData	PTR FTN(unsigned char ,)void  size(1) Largest target is 0
		 -> ctrlData(), 

    lcdCreateCustomCharacter@obj.ctrlRS	PTR FTN(unsigned char ,)void  size(1) Largest target is 0
		 -> ctrlRs(), 

    lcdCreateCustomCharacter@obj.ctrlEnable	PTR FTN(unsigned char ,)void  size(1) Largest target is 0
		 -> ctrlEn(), 

    lcdConfig@obj.ctrlWait	PTR FTN(unsigned long ,)void  size(1) Largest target is 0
		 -> delay_ms(), 

    lcdConfig@obj.ctrlData	PTR FTN(unsigned char ,)void  size(1) Largest target is 0
		 -> ctrlData(), 

    lcdConfig@obj.ctrlRS	PTR FTN(unsigned char ,)void  size(1) Largest target is 0
		 -> ctrlRs(), 

    lcdConfig@obj.ctrlEnable	PTR FTN(unsigned char ,)void  size(1) Largest target is 0
		 -> ctrlEn(), 

    lcdCreateCustomCharacter@Pattern	PTR unsigned char  size(1) Largest target is 8
		 -> main@Pattern3(BANK0[8]), main@Pattern1(BANK0[8]), 

    lcdCreateCustomCharacter@obj	const PTR const struct . size(1) Largest target is 4
		 -> main@objLcd(BANK0[4]), 

    lcdPutch@obj.ctrlWait	PTR FTN(unsigned long ,)void  size(1) Largest target is 1
		 -> delay_ms(), 

    lcdPutch@obj.ctrlData	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> ctrlData(), 

    lcdPutch@obj.ctrlRS	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> ctrlRs(), 

    lcdPutch@obj.ctrlEnable	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> ctrlEn(), 

    lcdPutch@obj	const PTR const struct . size(1) Largest target is 4
		 -> main@objLcd(BANK0[4]), 

    sp__memcpy	PTR void  size(1) Largest target is 16
		 -> lcdPuts@line2(BANK0[16]), lcdPuts@line1(BANK0[16]), 

    lcdPutsInLine2@obj.ctrlWait	PTR FTN(unsigned long ,)void  size(1) Largest target is 1
		 -> delay_ms(), 

    lcdPutsInLine2@obj.ctrlData	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> ctrlData(), 

    lcdPutsInLine2@obj.ctrlRS	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> ctrlRs(), 

    lcdPutsInLine2@obj.ctrlEnable	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> ctrlEn(), 

    lcdPutsInLine1@s	PTR const unsigned char  size(2) Largest target is 16
		 -> lcdPuts@line1(BANK0[16]), STR_1(CODE[15]), 

    lcdPutsInLine1@obj.ctrlWait	PTR FTN(unsigned long ,)void  size(1) Largest target is 1
		 -> delay_ms(), 

    lcdPutsInLine1@obj.ctrlData	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> ctrlData(), 

    lcdPutsInLine1@obj.ctrlRS	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> ctrlRs(), 

    lcdPutsInLine1@obj.ctrlEnable	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> ctrlEn(), 

    lcdPutsInLine1@obj	const PTR const struct . size(1) Largest target is 4
		 -> main@objLcd(BANK0[4]), 

    lcdWriteData@obj.ctrlWait	PTR FTN(unsigned long ,)void  size(1) Largest target is 1
		 -> delay_ms(), 

    lcdWriteData@obj.ctrlData	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> ctrlData(), 

    lcdWriteData@obj.ctrlRS	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> ctrlRs(), 

    lcdWriteData@obj.ctrlEnable	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> ctrlEn(), 

    lcdWriteData@obj	const PTR const struct . size(1) Largest target is 4
		 -> main@objLcd(BANK0[4]), 

    lcdSetPosition@obj.ctrlWait	PTR FTN(unsigned long ,)void  size(1) Largest target is 1
		 -> delay_ms(), 

    lcdSetPosition@obj.ctrlData	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> ctrlData(), 

    lcdSetPosition@obj.ctrlRS	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> ctrlRs(), 

    lcdSetPosition@obj.ctrlEnable	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> ctrlEn(), 

    lcdSetPosition@obj	const PTR const struct . size(1) Largest target is 4
		 -> main@objLcd(BANK0[4]), 

    lcdWriteRegister@obj.ctrlWait	PTR FTN(unsigned long ,)void  size(1) Largest target is 1
		 -> delay_ms(), 

    lcdWriteRegister@obj.ctrlData	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> ctrlData(), 

    lcdWriteRegister@obj.ctrlRS	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> ctrlRs(), 

    lcdWriteRegister@obj.ctrlEnable	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> ctrlEn(), 

    lcdWriteRegister@obj	const PTR const struct . size(1) Largest target is 4
		 -> main@objLcd(BANK0[4]), 

    lcdConfig@obj	const PTR const struct . size(1) Largest target is 4
		 -> main@objLcd(BANK0[4]), 

    lcdInit@wait	PTR FTN(unsigned long ,)void  size(1) Largest target is 1
		 -> delay_ms(), 

    lcdInit@data	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> ctrlData(), 

    lcdInit@RS	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> ctrlRs(), 

    lcdInit@obj.ctrlWait	PTR FTN(unsigned long ,)void  size(1) Largest target is 1
		 -> delay_ms(), 

    lcdInit@obj.ctrlData	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> ctrlData(), 

    lcdInit@obj.ctrlRS	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> ctrlRs(), 

    lcdInit@obj.ctrlEnable	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> ctrlEn(), 

    lcdInit@E	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> ctrlEn(), 

    lcdInit@obj	const PTR struct . size(1) Largest target is 4
		 -> main@objLcd(BANK0[4]), 

    S30$ctrlWait	PTR FTN(unsigned long ,)void  size(1) Largest target is 1
		 -> delay_ms(), 

    objLcd.ctrlWait	PTR FTN(unsigned long ,)void  size(1) Largest target is 1
		 -> delay_ms(), 

    S30$ctrlData	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> ctrlData(), 

    objLcd.ctrlData	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> ctrlData(), 

    S30$ctrlRS	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> ctrlRs(), 

    objLcd.ctrlRS	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> ctrlRs(), 

    S30$ctrlEnable	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> ctrlEn(), 

    objLcd.ctrlEnable	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> ctrlEn(), 


Critical Paths under _main in COMMON

    _main->_lcdPutch
    _main->_lcdSetPosition
    _lcdPutsInLine1->_lcdSetPosition
    _lcdInit->_lcdConfig
    _lcdInit->_lcdSetPosition
    _lcdSetPosition->_lcdWriteData
    _lcdConfig->_lcdWriteRegister
    _lcdCreateCustomCharacter->_lcdPutch
    _lcdWriteRegister->_delay_ms
    _lcdPutch->_lcdWriteData
    _lcdWriteData->_delay_ms

Critical Paths under _main in BANK0

    _main->_lcdPutsInLine1
    _lcdPutsInLine1->_lcdSetPosition
    _lcdInit->_lcdSetPosition
    _lcdCreateCustomCharacter->_lcdPutch

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                39    39      0   23539
                                             11 BANK0     39    39      0
           _lcdCreateCustomCharacter
                            _lcdInit
                           _lcdPutch
                     _lcdPutsInLine1
                     _lcdSetPosition
 ---------------------------------------------------------------------------------
 (1) _lcdPutsInLine1                                      10     7      3    5738
                                              1 BANK0     10     7      3
                             _ctrlRs *
                     _lcdSetPosition
                       _lcdWriteData
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              6     2      4    6130
                                              1 BANK0      6     2      4
                          _lcdConfig
                     _lcdSetPosition
 ---------------------------------------------------------------------------------
 (1) _lcdSetPosition                                       3     2      1    2846
                                             12 COMMON     2     1      1
                                              0 BANK0      1     1      0
                             _ctrlRs *
                       _lcdWriteData
 ---------------------------------------------------------------------------------
 (2) _lcdConfig                                            2     2      0    2727
                                             12 COMMON     2     2      0
                   _lcdWriteRegister
 ---------------------------------------------------------------------------------
 (1) _lcdCreateCustomCharacter                             7     5      2    5848
                                              1 BANK0      7     5      2
                           _lcdPutch
                   _lcdWriteRegister
 ---------------------------------------------------------------------------------
 (3) _lcdWriteRegister                                     4     3      1    2584
                                              8 COMMON     4     3      1
                           _ctrlData *
                             _ctrlEn *
                             _ctrlRs *
                           _delay_ms *
 ---------------------------------------------------------------------------------
 (1) _lcdPutch                                             3     2      1    2737
                                             12 COMMON     2     1      1
                                              0 BANK0      1     1      0
                             _ctrlRs *
                       _lcdWriteData
 ---------------------------------------------------------------------------------
 (2) _lcdWriteData                                         4     3      1    2083
                                              8 COMMON     4     3      1
                           _ctrlData *
                             _ctrlEn *
                           _delay_ms *
 ---------------------------------------------------------------------------------
 (3) _delay_ms                                             8     4      4     447
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (3) _ctrlEn                                               1     0      1     446
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (3) _ctrlData                                             1     0      1     446
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (2) _ctrlRs                                               1     0      1     261
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcdCreateCustomCharacter
     _lcdPutch
       _ctrlRs *
       _lcdWriteData *
         _ctrlData *
         _ctrlEn *
         _delay_ms *
     _lcdWriteRegister
       _ctrlData *
       _ctrlEn *
       _ctrlRs *
       _delay_ms *
   _lcdInit
     _lcdConfig
       _lcdWriteRegister
     _lcdSetPosition
       _ctrlRs *
       _lcdWriteData *
   _lcdPutch
   _lcdPutsInLine1
     _ctrlRs *
     _lcdSetPosition *
     _lcdWriteData *
   _lcdSetPosition

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      30       7       60.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     32      4B       5       93.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      89      12        0.0%
ABS                  0      0      89       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Thu Mar 17 00:00:52 2022

                               pc 0002                                l63 03E3                                l72 0478  
                              l66 03DB                                l75 0480                                l69 03D3  
                              fsr 0004   lcdCreateCustomCharacter@Pattern 0021                               l102 04AE  
                             l111 0453                               l120 0587                               l105 04E0  
                             l114 063E                               l108 06FF                               l143 0523  
                             l138 0438                               l901 0484                               l911 04E4  
                             l903 0491                               l921 04FC                               l913 04E4  
                             l905 0498                               l923 050E                               l915 04F8  
                             l907 049F                               l931 0536                               l925 0516  
                             l909 04A5                               l933 0541                               l935 0563  
                             l927 0527                               l951 070A                               l881 03DC  
                             l937 056B                               l929 0531                               l961 0776  
                             l953 0720                               l883 03D4                               l891 0640  
                             l971 07B3                               l963 0782                               l955 0737  
                             l885 03CF                               l893 0589                               l973 07BF  
                             l965 0792                               l957 074C                               l949 0700  
                             l887 0454                               l895 043C                               l967 0799  
                             l959 0761                               l889 0455                               l897 0421  
                             l969 07A5                               l899 04B0                               u210 0478  
                             u220 0480                               u221 047F                               u310 072A  
                             u215 046B                               u216 046C                               u320 073F  
                             u217 0471                               u218 0472                               u330 0754  
                             u219 0477                               u235 06BC                               u260 0523  
                             u340 0769                               u245 05FB                               u261 0522  
                             u270 054D                               u255 04E7                               u280 0575  
                             u265 051F                               u290 0587                               u291 0586  
                             u437 07C7                               u447 0457  lcdCreateCustomCharacter@Location 0022  
                             fsr0 0004                               indf 0000                      main@Pattern1 003E  
                    main@Pattern3 0046                      main@Pattern4 002F                    ??_lcdWriteData 0079  
                            STR_1 0025                              _cont 0069                              _main 0700  
                            _temp 0061                              btemp 007E                              start 0000  
                ??_lcdPutsInLine1 0024                             ?_main 0070                             _PORTB 0006  
                           _PORTC 0007                             _PORTD 0008                             _TRISB 0086  
                           _TRISC 0087                             _TRISD 0088                   __end_of_lcdInit 04AF  
                _lcdWriteRegister 063F                             main@b 0037                             fpbase 0008  
                           pclath 000A                             status 0003                             wtemp0 007E  
                 __initialization 07D1                      __end_of_main 07D1  __end_of_lcdCreateCustomCharacter 0524  
                 lcdWriteData@obj 007B                            ??_main 002B                      ctrlData@Data 0070  
                    ctrlEn@status 0070                  __end_of__fptable 0015                  __end_of_delay_ms 0481  
            delay_ms@milliseconds 0070                  __end_of_lcdPutch 0439            lcdSetPosition@position 007C  
                __end_of_ctrlData 03D4              __end_of_lcdWriteData 063F                            _ctrlEn 03DC  
                          _ctrlRs 03D4                         ??_lcdInit 0025                            fptable 0003  
                          fptotal 0008           __end_of__initialization 07FC                      ctrlRs@status 0070  
                  __pcstackCOMMON 0070                      __pidataBANK0 03EC                      __pidataBANK1 03FB  
                lcdWriteData@data 0078         ?_lcdCreateCustomCharacter 0021                        __pbssBANK0 0061  
                      __pbssBANK1 00A0                        __pmaintext 0700          __end_of_lcdWriteRegister 0700  
                         ?_ctrlEn 0070                           ?_ctrlRs 0070                         ?_delay_ms 0070  
                       ?_lcdPutch 007C                        __stringtab 0015                         ?_ctrlData 0070  
               __end_of_lcdConfig 04E1                           _decenas 0065                           _lcdInit 0481  
                         __ptext1 0524                           __ptext2 0481                           __ptext3 0439  
                         __ptext4 04AF                           __ptext5 04E1                           __ptext6 063F  
                         __ptext7 041E                           __ptext8 0588                           __ptext9 0454  
                      ??_delay_ms 0074                        ??_lcdPutch 007D                           clrloop0 03E5  
                    _lcdWriteData 0588              end_of_initialization 07FC                        ??_ctrlData 0071  
                      lcdInit@obj 0026                         _PORTDbits 0008                        main@objLcd 004E  
                  __end_of_ctrlEn 03E4                    __end_of_ctrlRs 03DC               start_initialization 07D1  
                  _lcdSetPosition 0439                 lcdPutsInLine1@obj 002A                        init_fetch0 040B  
               ?_lcdWriteRegister 0078                       __pdataBANK0 0052                       __pdataBANK1 00C0  
                        ??_ctrlEn 0071                          ??_ctrlRs 0071                ??_lcdWriteRegister 0079  
                       ___latbits 0002                     __pcstackBANK0 0020         lcdCreateCustomCharacter@i 0026  
               __size_of__fptable 0012           lcdWriteRegister@regAddr 0078             lcdPutsInLine1@initPos 0023  
          __end_of_lcdSetPosition 0454                         __pfunctab 0003                         _lcdConfig 04AF  
                       __pstrings 0015                          ?_lcdInit 0021          _lcdCreateCustomCharacter 04E1  
                  _lcdPutsInLine1 0524       lcdCreateCustomCharacter@obj 0025                         clear_ram0 03E4  
                 ?_lcdSetPosition 007C                         lcdInit@RS 0022                        ?_lcdConfig 0070  
                       main@F1432 005A                         main@F1434 0052                         main@F1436 00C8  
                       main@F1438 00C0                         lcdPutch@c 007C                         fp__ctrlEn 000F  
                       fp__ctrlRs 0009                       __stringbase 0024            __end_of_lcdPutsInLine1 0588  
              __end_of__stringtab 0025                          __fptable 0003                   ?_lcdPutsInLine1 0021  
                        _delay_ms 0454                          _centenas 0067                          __ptext10 03DC  
                        __ptext11 03CF                          __ptext12 03D4                          _lcdPutch 041E  
                    lcdConfig@obj 007D                          _ctrlData 03CF                          lcdInit@E 0021  
                     ??_lcdConfig 007C                          _unidades 0063                   lcdPutsInLine1@i 0028  
                 lcdPutsInLine1@s 0021                          init_ram0 040F                 lcdSetPosition@obj 0020  
                       stringcode 001F                       lcdInit@data 0023                       lcdInit@wait 0024  
      ??_lcdCreateCustomCharacter 0023                      lcdPuts@F1501 00B0                      lcdPuts@F1503 00A0  
                        stringdir 001F                          stringtab 0015                     ?_lcdWriteData 0078  
             lcdWriteRegister@obj 007B                  ??_lcdSetPosition 007D                       fp__delay_ms 0012  
                     lcdPutch@obj 0020                       fp__ctrlData 000C  
